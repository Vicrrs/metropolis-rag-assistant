Gst-nvmultiurisrcbin — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer Plugin OverviewGst-nvmultiurisrcbinGst-nvmultiurisrcbin#NoteThe DeepStream 6.2 onwards support nvmultiurisrcbin with REST API support for dynamic sensor add/remove capability.This bin integrates three major DeepStream components viz.nvds_rest_server, nvurisrcbin, and nvstreammux (Gst-nvstreammux) into a single GstBin.
For more details onnvurisrcbin, please rungst-inspect-1.0 nvurisrcbinon a machine/docker container with DeepStream installed.The bin allows users to create simple gstreamer pipelines for AI multimedia analytics.
Users can add or remove sensors over REST API calls made to a HTTP endpoint.
A sensor is defined as a streaming entity with a valid unique Sensor ID, and URI.The below High Level Overview diagram and table illustrate how nvmultiurisrcbin integrates nvds_rest_server, nvurisrcbin, and nvstreammux.Gst-nvmultiurisrcbin High Level Overview of integrated components#Component NameSource path in DeepStreamSDK Package for more infoREST API Server; nvds_rest_server/opt/nvidia/deepstream/deepstream/sources/libs/nvds_rest_server/Bin Manipulation API Library/opt/nvidia/deepstream/deepstream/sources/libs/gstnvdscustomhelper/nvmultiurisrcbin/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvmultiurisrcbin/deepstream-test5-app Demonstrating usage of nvmultiurisrcbin with nvmsgconv and nvmsgbroker/opt/nvidia/deepstream/deepstream/sources/apps/sample_apps/deepstream-test5/nvurisrcbin/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvurisrcbin/nvstreammuxSource not available. For more info please rungst-inspect-1.0 nvstreammux1. Introduction#This GstBin is a GStreamer source bin. The bin exposes only one source pad that provide batched buffers from an nvstreammux instance.Users can add/remove streams to the bin for batching over the REST APIs defined in the SectionREST API Payload definitions.Users can also provide a static list of streams and their sensor IDs to start the pipeline with. This can be done using the Gst properties uri-list and sensor-id-list described below.The nvmultiurisrcbin component output batched buffers from an nvstreammux instance.2. Features#The following table summarizes the features of the bin.Gst-nvmultiurisrcbin features#FeatureDescriptionReleasenvmultiurisrcbin integrating REST API Server, nvurisrcbin, and nvstreammuxIntroducing nvmultiurisrcbinDS 6.2REST API to add and remove sensors runtimeDynamically add/remove sensorsDS 6.2Stream specificStream addition and removalDS 6.2nvdspreprocessUpdate ROI for preprocessDS 6.4nvv4l2decoder“drop-frame-interval” and “skip-frame” property updateDS 6.4nvdsinfer“interval” property updateDS 6.4nvdsinferserver“interval” property updateDS 6.4nvv4l2encoder“force-idr”, “force-intra”,  “iframeinterval” and “bitrate” property updateDS 6.4nvstreammux“batched-push-timeout” property updateDS 6.4nvvideoconvert“src-crop”, “dest-crop”, “flip-method” and “interpolation-method” property updateDS 6.4nvdsosd“process-mode” property updateDS 6.4Application specificApplication quitDS 6.4GET requestsGet the stream-infoDS 7.03. How to use nvmultiurisrcbin in a pipeline#Below pipeline is a sample gstreamer pipeline which is configured to accept upto 10 input sources and the pipline starts up with two sources:gst-launch-1.0nvmultiurisrcbin\port=9000ip-address=localhost\batched-push-timeout=33333max-batch-size=10\drop-pipeline-eos=1live-source=1\uri-list=file:///opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4,file:///opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4 width=1920 height=1080 \! nvmultistreamtiler ! nveglglessinkBelow diagram illustrates a similar pipeline (with different plugins like nvinfer, nvmsgconv, and nvmsgbroker downstream).REST API payload definitions and sample curl commands for reference#Note:Currently only few fields from the JSON schema described below are used/mandatory.
The remaining fields are optional and ignored.List of mandatory (and used) fields are:value/camera_idvalue/camera_urlvalue/changeADD a new stream to a DeepStream pipeline#NoteDS-7.1 supports REST API version/api/v1. Refer below schema details.Payload definition and the sample curl command:1.curl -XPOST 'http://localhost:9000/api/v1/stream/add' -d '{
  "key": "sensor",
  "value": {
     "camera_id": "uniqueSensorID1",
     "camera_name": "front_door",
     "camera_url": "file:///opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4",
     "change": "camera_add",
     "metadata": {
         "resolution": "1920 x1080",
         "codec": "h264",
         "framerate": 30
     }
 },
 "headers": {
     "source": "vst",
     "created_at": "2021-06-01T14:34:13.417Z"
 }
}'

2.curl -XPOST 'http://localhost:9000/api/v1/stream/add' -d '{
 "key": "sensor",
 "event": {
     "camera_id": "uniqueSensorID1",
     "camera_name": "front_door",
     "camera_url": "rtsp://xyz.mp4",
     "change": "camera_streaming",
     "metadata": {
         "resolution": "1920 x1080",
         "codec": "h264",
         "framerate": 30
     }
 },
 "headers": {
     "source": "vst",
     "created_at": "2021-06-01T14:34:13.417Z"
 }
}'REMOVE a new stream to a DeepStream pipeline#Payload definition and the sample curl command:curl -XPOST 'http://localhost:9000/api/v1/stream/remove' -d '{
    "key": "sensor",
    "value": {
        "camera_id": "uniqueSensorID1",
        "camera_name": "front_door",
        "camera_url": "file:///opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4",
        "change": "camera_remove",
        "metadata": {
            "resolution": "1920 x1080",
            "codec": "h264",
            "framerate": 30
        }
    },
    "headers": {
        "source": "vst",
        "created_at": "2021-06-01T14:34:13.417Z"
    }
}'4. Gst Properties#Gst Properties directly configuring nvmultiurisrcbin#Gst-nvmultiurisrcbin gstreamer properties directly configuring the bin#PropertyMeaningType and RangeExample Notesuri-listcomma separated URI list of sources; URI of the file or rtsp sourcestringuri-list=file:///opt/file.mp4,file:///opt/file.mp4sensor-id-listcomma separated list of unique source sensor IDs; this vector is one to one mapped with the uri-liststringsensor-id-list=uniqueSensorID1,uniqueSensorID2sensor-name-listOPTIONAL comma separated list of source sensor names; this vector is one to one mapped with the uri-liststringsensor-name-list=SensorName1,SensorName2modeVideo-only or Audio-only modes available0: for video-only
1: for audio-onlymode=0 (default)ip-addressSet REST API HTTP IP Addressstringip-address=localhost (default)portSet REST API HTTP Port number; Note: User may pass 0 to disable REST API Serverstringport=9000 (default)max-batch-sizeSet the maximum batch size to be used for nvstreammux; Maximum number of sources to be supported with this instance of nvmultiurisrcbinInteger,
1 to 4,294,967,295max-batch-size=30 (default)Gst Properties to configure each instance of nvurisrcbin created inside this bin#Gst-nvmultiurisrcbin nvurisrcbin specific properties#PropertyMeaningType and RangeExample Notesnum-extra-surfacesSet extra decoder surfaces; Number of surfaces in addition to minimum decode surfaces given by the decoderInteger,
1 to 4,294,967,295num-extra-surfaces=1 (default)gpu-idSet GPU Device ID used by nvurisrcbin components like decoder (nvv4l2decoder) and nvvideoconvertInteger,
1 to 4,294,967,295gpu-id=0 (default)cudadec-memtypeMemory type for cuda decoder buffers,
Memory type for CUDA decoder buffers. Represented internally by enum CudaDecMemType.
0 (memtype_device): Device
1 (memtype_pinned): Host Pinned
2 (memtype_unified): UnifiedInteger,
0, 1, or 2cudadec-memtype=0 (default)drop-frame-intervalInterval to drop the frames, e.g. a value of 5 means the decoder outputs every fifth frame, and others are dropped.Integer,
1 to 30Default: 0, dGPU / Jetsondec-skip-framesType of frames to skip during decoding. Represented internally by enum SkipFrame. 0 (decode_all): decode all frames
1 (decode_non_ref): skips non-ref frames (Applicable only on Jetson platform)
2 (decode_key): decode key framesInteger,
0, 1, or 2skip-frames=0 Default: 0 ,dGPU / Jetsonselect-rtp-protocolTransport Protocol to use for RTPEnum RtpProtocol Default: 0, rtp-multi
(0): rtp-multi - UDP + UDP Multicast + TCP
(4): rtp-tcp - TCP Onlyselect-rtp-protocol=0 (default)file-loopLoop file sources after EOS. Src type must be source-type-uri and uri starting with ‘file:/’booleanfile-loop=false (default)rtsp-reconnect-intervalTimeout in seconds to wait since last data was received from an RTSP source before forcing a reconnection. 0=disable timeoutInteger,
1 to 4,294,967,295rtsp-reconnect-interval=10rtsp-reconnect-attemptsMaximum number of times a reconnection is attempted. Setting it to -1 means reconnection will be attempted infinitely. Valid when type of source is 4 and rtsp-reconnect-interval-sec is a non-zero positive value.Integer, >=-1rtsp-reconnect-attempts=4latencyJitterbuffer size in milliseconds; applicable only for RTSP streams.Integer,
1 to 4,294,967,295latency=100 (default)udp-buffer-sizeUDP Buffer Size in bytes; applicable only for RTSP streams.Integer,
1 to 4,294,967,295udp-buffer-size=524288 (default)smart-recordEnable Smart Record and choose the type of events to respond to. Sources must be of type source-type-rtsp(0):smart-rec-disable - Disable Smart Record
(1):smart-rec-cloud  - Trigger Smart Record through cloud messages only
(2):smart-rec-multi  - Trigger Smart Record through cloud and local eventssmart-record=0 (default)smart-rec-dir-pathPath of directory to save the recorded file.stringAbsolute or relative pathsmart-rec-file-prefixBy default, Smart_Record is the prefix. For unique file names every source must be provided with a unique prefixstringAbsolute or relative pathsmart-rec-video-cacheSize of video cache in seconds. DEPRECATED: Use ‘smart-rec-cache’ insteadInteger,
1 to 4,294,967,295smart-rec-video-cache=0 (default)smart-rec-cacheSize of cache in seconds, applies to both audio and video cacheInteger,
1 to 4,294,967,295smart-rec-cache=0 (default)smart-rec-containerContainer format of recorded video. MP4 and MKV containers are supported. Sources must be of type source-type-rtsp(0): smart-rec-mp4 - MP4 container
(1): smart-rec-mkv - MKV containersmart-rec-container=0 (default)smart-rec-modeSmart record mode(0):smart-rec-mode-av - Record audio and video if available
(1):smart-rec-mode-video - Record video only if available
(2):smart-rec-mode-audio - Record audio only if availablesmart-rec-mode=0 (default)smart-rec-default-durationIn case a Stop event is not generated. This parameter will ensure the recording is stopped after a predefined default duration.Integer,
1 to 4,294,967,295smart-rec-default-duration=20 (default)disable-passthroughTo disable the passhthrough mode of nvvideoconvert used inside the nvurisrcbinbooleandisable-passhtorugh=false(default)drop-pipeline-eosBoolean property so that EOS is not propagated downstream when all source pads are at EOS.booleandrop-pipeline-eos=false(default)async-handlingBoolean property so that will handle Asynchronous state changesbooleanasync-handling=true(default)disable-audioDisable audio path mode at init timebooleandisable-audio=true(default)ipc-buffer-timestamp-copyCopy buffer timestamp for nvunixfdsrc pluginbooleanipc-buffer-timestamp-copy=false(default)ipc-connection-attemptsMax number of attempts for connection (-1 = unlimited)Integer. Range: -1 - 2147483647 Default: -1ipc-connection-attempts=-1(default)ipc-connection-intervalconnection interval between connection attempts in micro secondsUnsigned Integer64. Range: 0 - 18446744073709551615ipc-connection-interval=1000000(default)ipc-socket-pathThe path to the control socket used to control the shared memory transport. This may be modified during the NULL->READY transitionStringipc-socket-path=null(default)low-latency-modeSet low latency mode for bitstreams having I and IPPP frames on decoderbooleanlow-latency-mode=false(default)message-forwardForwards all children messagesbooleanmessage-forward=false(default)Gst Properties to configure the instance of nvstreammux created inside this bin#All properties except “batch-size” can be configured using the same property names as defined fornvstreammux here.5. Important Notes#nvmultiurisrcbin config recommendations and notes on expected behavior#Gst-nvmultiurisrcbin recommendations#SLExpected Behavior and Recommendation1nvstreammux, live-source property.
live-source=1
live-source need to be turned ON to allow batching of available buffers when number of sources is < max-batch-size configuration.2REST API stream/add or stream/remove payload value of the change key must contain substring add or remove respectively.
Expected Behavior: If ‘add’ is in the change field value, the sensorId and uri will be used to create a new stream.
If ‘remove’ is in the change field value, the sensorId and uri will be used to find and remove the matching running stream.3Boolean property to inform muxer to skip sending EOS downstream is recommended to be set to 1.
When using nvmultiurisrcbin drop-pipeline-eos=1 is preferred default to allow pipeline to stay alive for new sensor add requests after the last added sensor EOS.
drop-pipeline-eos=14nvstreammux, max-batch-size property.
The value set signgifies the maximum number of streams that can be added at a given instance.
Once the streams are removed or EOS is reached, the pad id would be reused6. Limitations#Gst-nvmultiurisrcbin known issues#SLLimitations1Usage of new nvstreammux for video and audio usecases are not supported at this time and might not work.previousGst-nvvideotestsrcnextGst-nvurisrcbinOn this page1. Introduction2. Features3. How to use nvmultiurisrcbin in a pipelineREST API payload definitions and sample curl commands for referenceADD a new stream to a DeepStream pipelineREMOVE a new stream to a DeepStream pipeline4. Gst PropertiesGst Properties directly configuring nvmultiurisrcbinGst Properties to configure each instance of nvurisrcbin created inside this binGst Properties to configure the instance of nvstreammux created inside this bin5. Important Notesnvmultiurisrcbin config recommendations and notes on expected behavior6. LimitationsPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.