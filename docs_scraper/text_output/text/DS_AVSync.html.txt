AV Sync in DeepStream — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formAV Sync in...AV Sync in DeepStream#AV Synchronization support is enabled for DeepStream-6.0 release and onwards. Currently it is in alpha development stage. A sample appdeepstream-avsync-appis also provided atapp/sample_apps/deepstream-avsyncfor reference. This document provides the samplegstreamerpipelines.Setup for RTMP/RTSP Input streams for testing#RTMP Server Setup#$ apt-get update
$ apt-get install nginx -y
$ apt-get install libnginx-mod-rtmp -y
$ vim /etc/nginx/nginx.conf #add below content
  rtmp {
    server {
    listen 1935;
    chunk_size 4096;
    application live {
    live on;
    record off;
    }
   }
  }
$ service nginx restartCommand to simulate 2 RTMP streams usingffmpeg#$ sudo ffmpeg -re -i <file_name1.mp4> -vcodec copy -1 -c:a aac -b:a 160k -ar 48000 -strict -2 -f flv rtmp://<host ip address:port>/live/test1
$ sudo ffmpeg -re -i <file_name2.mp4> -vcodec copy -1 -c:a aac -b:a 160k -ar 48000 -strict -2 -f flv rtmp://<host ip address:port>/live/test2RTSP Server Setup#$ cvlc <file_name.mp4> :sout=#gather:rtp{sdp=rtsp://:<port>/file-stream} :network-caching=1500 :sout-all :sout-keepThertspstream generated from above command can be accessed using URL:rtsp://<host_ip_address:port>/file-stream.AVSync Reference Pipelines#NoteRTMPsrcis not a live source. You’ll need to addfakesrcwithis-live=trueand connect it toaudiomixer. This makes sure it won’t break even if the data from one of the sources is unavailable.A max-latency of 250msec is set on nvstreammux forrtmpinput source. The value is set because max latency required for buffers fromrtmpsrctonvstreammuxis 250msec. You can tune this value as per your requirement. Same value is set in audio path onaudiomixerfor the same reason.RTSP output will be available atrtsp://<host_ip_address:8554>/ds-test.You may experience AV sync is out of sync if the file output is played using VLC player. In that case tryffmpegorgst-launchpipeline. This could be VLC player specific issue.Make sure that audio stream has same encoded configuration. (e.g. sampling rate). If these are different,audiomixercrashes. You may addaudioconvertandaudioresamplebeforeaudiomixerfor given source so that all inputs toaudiomixerhave same format and sampling rate.RTMP output on YouTube™ live takes time to appear (~30-40seconds). This could be because of YouTube™ player’s buffering mechanism.In case of RTMP output, before running the pipeline make sure that YouTube™ live page is refreshed and ready to accept incoming data.If case of packet drop,rtspoutput may look like it is corrupted. In that case reduce bitrate and try.Pipelines with existing nvstreammux component#RTMP_IN->RTMP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2output=<RTMPurl>e.g.rtmp://a.rtmp.youtube.com/live2/<key> For Youtube livertmp://<host ip address:port>/live/test For Hostgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2max-latency=250000000batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixerlatency=250000000!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eFILE_IN->RTSP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!r.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eFILE_IN->RTMP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4output=<RTMPurl>e.g.rtmp://a.rtmp.youtube.com/live2/<key> For Youtube livertmp://<host ip address:port>/live/test For Hostgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTMP_IN->FILE_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1max-latency=250000000name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixerlatency=250000000name=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTSP_IN->FILE_OUT#input1=<rtspurl>input2=<rtspurl>gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.-eFILE_IN->FILE_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTSP_IN->RTSP_OUT#input1=<rtspurl>input2=<rtspurl>gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!r.demux2.!queue!audioconvert!mixer.-eRTMP_IN->RTSP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2gst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1max-latency=250000000name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixerlatency=250000000name=mixer!queue!r.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eReference AVSync + ASR (Automatic Speech Recognition) Pipelines with existing nvstreammux#NoteThese pipelines demonstrate how to add ASR plugin inavsyncpipeline.To visualize overlaid text output from ASR on video frames, refer todeepstream-avsync-appapplication.RTMP_IN->RTMP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For YouTube™ livertmp://<host ip address:port>/live/test #For Hostgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxmax-latency=250000000batched-push-timeout=33333width=1920height=1080batch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvdsosd!queue!nvvideoconvert!queue!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixerlatency=250000000!queue!avenc_aac!aacparse!queue!mux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0-eNoteMake sure the ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.RTSP_IN->RTMP_OUT#input1=<rtspurl>input2=<rtsp_url>output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For Youtube livertmp://<host ip address:port>/live/test #For Hostgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatched-push-timeout=33333width=1920height=1080batch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=flvmuxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!flvmux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0qos=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0qos=0-eNoteMake sure the ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.FILE_IN->RTMP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For Youtube livertmp://<host ip address:port>/live/test #For Hostgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2batched-push-timeout=33333width=1920height=1080sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvdsosd!queue!nvvideoconvert!queue!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0-eNoteMake sure the ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.Pipelines with New nvstreammux component#You can enable the newnvstreammux(Beta quality) by exportingUSE_NEW_NVSTREAMMUX=yes. For more information, see the :doc: “Gst-nvstreammux New (Beta)” section in theNVIDIA DeepStream SDK Developer Guide 6.1 Release.NoteThe existing nvstreammux functionality will be deprecated in the future.RTMP_IN->RTMP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2output=<RTMPurl>e.g.rtmp://a.rtmp.youtube.com/live2/<key> For Youtube livertmp://<host ip address:port>/live/test For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2max-latency=250000000sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixerlatency=250000000!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTSP_IN->RTMP_OUT#input1=<rtspurl>input2=<rtspurl>output=<RTMPurl>e.g.rtmp://a.rtmp.youtube.com/live2/<key> For Youtube livertmp://<host ip address:port>/live/test For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.-eFILE_IN->RTSP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!r.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eFILE_IN->RTMP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4output=<RTMPurl>e.g.rtmp://a.rtmp.youtube.com/live2/<key> For Youtube livertmp://<host ip address:port>/live/test For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTMP_IN->FILE_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1max-latency=250000000name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixerlatency=250000000name=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTSP_IN->FILE_OUT#input1=<rtspurl>input2=<rtspurl>USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.-eFILE_IN->FILE_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eRTSP_IN->RTSP_OUT#input1=<rtspurl>input2=<rtspurl>USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!r.demux2.!queue!audioconvert!mixer.-eRTMP_IN->RTSP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1max-latency=250000000name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvrtspoutsinkbinname=ruridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!audioconvert!mixer.sink_0audiomixerlatency=250000000name=mixer!queue!r.demux2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.-eReference AVSync + ASR Pipelines (with new nvstreammux)#RTMP_IN->RTMP_OUT#input1=rtmp://<host ip address:port>/live/test1input2=rtmp://<host ip address:port>/live/test2output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For Youtube livertmp://<host ip address:port>/live/test #For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxmax-latency=250000000batch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvdsosd!queue!nvvideoconvert!queue!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixerlatency=250000000!queue!avenc_aac!aacparse!queue!mux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0-eNoteMake sure ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.RTSP_IN->RTMP_OUT#input1=<rtspurl>input2=<rtsp_url>output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For Youtube livertmp://<host ip address:port>/live/test #For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=flvmuxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!flvmux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0qos=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0qos=0-eNoteMake sure ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.FILE_IN->RTMP_OUT#input1=file:///AV_I_frames_1.mp4input2=file:///AV_I_frames_2.mp4output=<RTMPurl>e.g.:rtmp://a.rtmp.youtube.com/live2/<key> #For Youtube livertmp://<host ip address:port>/live/test #For HostUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=2sync-inputs=1name=mux1!queue!nvmultistreamtilerwidth=480height=360!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvdsosd!queue!nvvideoconvert!queue!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!rtmpsinklocation=$outputasync=0qos=0sync=1uridecodebin3uri=$input2name=demux2!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_1demux1.!queue!teename=t1t1.!queue!audioconvert!mixer.sink_0audiomixername=mixer!queue!avenc_aac!aacparse!queue!mux.t1.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0demux2.!queue!teename=t2t2.!queue!audioconvert!mixer.fakesrcnum-buffers=0is-live=1!mixer.t2.!queue!audioconvert!"audio/x-raw, format=(string)S16LE, channels=(int)1"!audioresample!"audio/x-raw, rate=(int)16000"!nvdsasrconfig-file=riva_asr_grpc_jasper_conf.ymlcustomlib-name="libnvds_riva_asr_grpc.so"create-speech-ctx-func="create_riva_asr_grpc_ctx"!fakesinksync=0async=0-eNoteMake sure ASR service is running (refer README ofdeepstream-avsync-app, for detailed information ) . To ensuregRPClibraries are accessible, setLD_LIBRARY_PATHusing$source ~/.profile. Update the correct path ofriva_asr_grpc_jasper_conf.ymlin the above command before running it.Gst-pipeline with audiomuxer (single source, without ASR + new nvstreammux)#RTMP_IN->FILE_OUT#input1=rtmp://<host ip address:port>/live/test1USE_NEW_NVSTREAMMUX=yesgst-launch-1.0uridecodebin3uri=$input1name=demux1!queue!nvvideoconvert!"video/x-raw(memory:NVMM)"!mux1.sink_0nvstreammuxbatch-size=1sync-inputs=1max-latency=250000000name=mux1!queue!nvmultistreamtiler!nvvideoconvert!"video/x-raw(memory:NVMM)"!nvv4l2h264enc!h264parse!queue!flvmuxname=muxstreamable=true!filesinklocation=out.flvasync=0qos=0sync=1demux1.!queue!audioconvert!audiomux.sink_0nvstreammuxname=audiomuxbatch-size=1max-latency=250000000sync-inputs=1!nvstreamdemuxname=audiodemuxaudiodemux.src_0!audioconvert!mixer.sink_0audiomixerlatency=250000000name=mixer!queue!avenc_aac!aacparse!queue!mux.fakesrcnum-buffers=0is-live=1!mixer.-epreviousNTP Timestamp in DeepStreamnextDeepStream With REST API SeverOn this pageSetup for RTMP/RTSP Input streams for testingRTMP Server SetupCommand to simulate 2 RTMP streams usingffmpegRTSP Server SetupAVSync Reference PipelinesPipelines with existing nvstreammux componentRTMP_IN->RTMP_OUTFILE_IN->RTSP_OUTFILE_IN->RTMP_OUTRTMP_IN->FILE_OUTRTSP_IN->FILE_OUTFILE_IN->FILE_OUTRTSP_IN->RTSP_OUTRTMP_IN->RTSP_OUTReference AVSync + ASR (Automatic Speech Recognition) Pipelines with existing nvstreammuxRTMP_IN->RTMP_OUTRTSP_IN->RTMP_OUTFILE_IN->RTMP_OUTPipelines with New nvstreammux componentRTMP_IN->RTMP_OUTRTSP_IN->RTMP_OUTFILE_IN->RTSP_OUTFILE_IN->RTMP_OUTRTMP_IN->FILE_OUTRTSP_IN->FILE_OUTFILE_IN->FILE_OUTRTSP_IN->RTSP_OUTRTMP_IN->RTSP_OUTReference AVSync + ASR Pipelines (with new nvstreammux)RTMP_IN->RTMP_OUTRTSP_IN->RTMP_OUTFILE_IN->RTMP_OUTGst-pipeline with audiomuxer (single source, without ASR + new nvstreammux)RTMP_IN->FILE_OUTPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.