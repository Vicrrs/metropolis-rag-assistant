GStreamer Plugin Overview — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer...GStreamer Plugin Overview#DeepStream SDK is based on the GStreamer framework. This section describes the DeepStream GStreamer plugins and the DeepStream input, outputs, and control parameters.
DeepStream SDK is supported on systems that contain an NVIDIA®Jetson™ module or an NVIDIA dGPU adapter[1].
The manual is intended for engineers who want to develop DeepStream applications or additional plugins using the DeepStream SDK. It also contains information about metadata used in the SDK. Developers can add custom metadata as well.
The manual describes the methods defined in the SDK for implementing custom inferencing layers using theIPlugininterface of NVIDIA®TensorRT™.
You can refer the sample examples shipped with the SDK as you use this manual to familiarize yourself with DeepStream application and plugin development.MetaData in the DeepStream SDKNvDsBatchMeta: Basic Metadata StructureUser/Custom Metadata Addition inside NvDsBatchMetaAdding Custom Meta in Gst Plugins Upstream from Gst-nvstreammuxAdding metadata to the plugin before Gst-nvstreammuxNew metadata fieldsGst-nvdspreprocess (Alpha)Inputs and OutputsFeaturesCustom library InterfacesGst-nvdspreprocess File Configuration SpecificationsGst PropertiesSample pipelinesGst-nvinferInputs and OutputsFeaturesGst-nvinfer File Configuration SpecificationsGst PropertiesClustering algorithms supported by nvinfercluster-mode = 0 | GroupRectanglescluster-mode = 1 | DBSCANcluster-mode = 2 | NMScluster-mode = 3 | Hybridcluster-mode=4 | No clusteringTensor MetadataTo read or parse inference raw tensor data of output layersSegmentation MetadataGst-nvinferserverInputs and OutputsGst-nvinferserver Configuration File SpecificationsFeaturesLow Levellibnvds_infer_server.soConfiguration File SpecificationsGst PropertiesDeepStream Triton samplesDeepStream Triton gRPC supportTriton Ensemble ModelsCustom Process interfaceIInferCustomProcessorfor Extra Input, LSTM Loop, Output Tensor PostprocessTensor Metadata Output for Downstream PluginsTo read or parse inference raw tensor data of output layersSegmentation MetadataGst-nvtrackerSub-batching (Alpha)Inputs and OutputsGst PropertiesNvDsTracker API for Low-Level Tracker LibraryNvMultiObjectTracker: A Reference Low-Level Tracker LibraryUnified Tracker Architecture for Composable Multi-Object TrackerWorkflow and Core Modules in TheNvMultiObjectTrackerLibraryData AssociationTarget Management and Error HandlingState EstimationObject Re-IdentificationTarget Re-AssociationBounding-box UnclippingSingle-View 3D Tracking (Alpha)Configuration ParametersLow-Level Tracker Comparisons and TradeoffsIOU TrackerNvSORT TrackerNvDeepSORT TrackerData AssociationConfiguration ParametersImplementation Details and ReferenceNvDCF TrackerVisual TrackingData AssociationConfiguration ParametersMiscellaneous Data OutputTerminated Track ListShadow Tracking Target DataPast-frame Target DataSetup and Usage of Re-ID ModelSetup Sample Re-ID ModelsCustomize Re-ID ModelRe-ID Feature OutputSetup and Usage of Sub-batching (Alpha)Use-case 1Use-case 2Setup and Visualization of Tracker Sample PipelinesPeople TrackingVehicle TrackingTracker Accuracy TuningHow to Implement a Custom Low-Level Tracker LibraryGst-nvstreammuxInputs and OutputsFeaturesGst PropertiesKnown Issues with Solutions and FAQ1. gst-inspect is not updated properly when switching between legacy and new streammuxGst-nvstreammux NewInputs and OutputsFeaturesGst PropertiesMux Config PropertiesNvStreamMux Tuning Solutions for specific use casesAimImportant Tuning parametersVideo and Audio muxing Use casesTroubleshootingMetadata propagation through nvstreammux and nvstreamdemuxCascaded MuxingKnown Issues with Solutions and FAQObserving video and/or audio stutter (low framerate)Sink plugin shall not move asynchronously to PAUSEDHeterogeneous batchingAdaptive BatchingOptimizing nvstreammux config for low-latency vs ComputeLatency Measurement API Usage guide for audiogst-inspect is not updated properly when switching between legacy and new streammuxGst-nvstreamdemuxInputs and OutputsUse case 1Use case 2Use case 3Gst-nvmultistreamtilerInputs and OutputsFeaturesGst PropertiesGst-nvdsosdInputs and OutputsFeaturesGst PropertiesGst-nvdsmetautilsGst-nvdsmetainsertInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesUse Cases & Sample PipelinesGst-nvdsmetaextractInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesUse Cases & Sample PipelinesGst-nvdsvideotemplateInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesSample pipelinesGst-nvdsaudiotemplateInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesSample pipelinesGst-nvvideoconvertInputs and OutputsFeaturesGst PropertiesGst-nvdewarperInputs and OutputsFeaturesConfiguration File ParametersGst PropertiesGst-nvofInputs and OutputsFeaturesGst PropertiesGst-nvofvisualInputs and OutputsFeaturesGst PropertiesGst-nvsegvisualInputs and OutputsFeaturesGst PropertiesGst-nvvideo4linux2DecoderInputs and OutputsFeaturesGst PropertiesEncoderInputs and OutputsFeaturesGst PropertiesGst-nvjpegdecInputs and OutputsFeaturesGst PropertiesGst-nvimagedecInputs and OutputsFeaturesGst PropertiesGst-nvjpegencInputs and OutputsFeaturesGst PropertiesGst-nvimageencInputs and OutputsFeaturesGst PropertiesGst-nvmsgconvInputs and OutputsFeaturesGst PropertiesNvMsgConv low level library API’sSchema CustomizationPayload with Custom ObjectsGst-nvmsgbrokerInputs and OutputsFeaturesGst Propertiesnvds_msgapi: Protocol Adapter Interfacenvds_msgapi_connect(): Create a Connectionnvds_msgapi_send() and nvds_msgapi_send_async(): Send an eventnvds_msgapi_subscribe(): Consume data by subscribing to topicsnvds_msgapi_do_work(): Incremental Execution of Adapter Logicnvds_msgapi_disconnect(): Terminate a Connectionnvds_msgapi_getversion(): Get Version Numbernvds_msgapi_get_protocol_name(): Get name of the protocolnvds_msgapi_connection_signature(): Get Connection signaturenvds_kafka_proto: Kafka Protocol AdapterInstalling DependenciesUsing the AdapterConfiguring Protocol SettingsProgrammatic IntegrationSecurity for KafkaAzure MQTT Protocol Adapter LibrariesInstalling DependenciesSetting Up Azure IoTConfiguring Adapter SettingsUsing the AdapterMonitor Adapter ExecutionMessage Topics and RoutesAMQP Protocol AdapterInstalling DependenciesAMQP brokerConfigure Adapter SettingsUsing the AdapterUser authenticationProgrammatic IntegrationMonitor Adapter ExecutionREDIS Protocol AdapterInstalling DependenciesREDIS serverConfigure Adapter SettingsUser AuthenticationUsing the AdapterProgrammatic IntegrationMonitor Adapter ExecutionMQTT Protocol AdapterInstalling DependenciesEclipse MosquittoConfigure Adapter SettingsUsing the AdapterProgrammatic IntegrationMonitor Adapter Executionnv_msgbroker: Message Broker interfacenv_msgbroker_connect(): Create a Connectionnv_msgbroker_send_async(): Send an event asynchronouslynv_msgbroker_subscribe(): Consume data by subscribing to topicsnv_msgbroker_disconnect(): Terminate a Connectionnv_msgbroker_version(): Get Version NumberAutoreconnect featureWork-interval configurationnvds_logger: Logging FrameworkGst-nvdsanalyticsInputs and OutputsFeaturesGst PropertiesConfiguration File ParametersGst-nvdsudpsrcInputs and OutputsFeaturesGst PropertiesExample pipelinesGst-nvdsudpsinkInputs and OutputsFeaturesGst PropertiesExample pipelinesGst-nvdspostprocess (Alpha)Inputs and OutputsFeaturesGst-nvdspostprocess File Configuration SpecificationsGst PropertiesSample pipelinesGst-nvds3dfilterCustom library InterfacesInputs and OutputsConfiguration fileGst-nvds3dfilter properties SpecificationsSupported DS3D filter custom libsCustomds3d::datafilterlibrary:libnvds_3d_alignment_datafilter.soInputs and OutputsConfiguration fileConfiguration optionsCustomds3d::datafilterlibrary:libnvds_3d_depth2point_datafilter.soGst-nvds3dbridgeGst-nvds3dbridge properties SpecificationsCustom library InterfacesSupported DS3D Data bridgesCustom low level library:libnvds_3d_video_databridge.soInputs and OutputsConfiguration fileVideo bridge configuration optionsGst-nvds3dmixerGst-nvds3dmixer properties SpecificationsCustom library InterfacesSupported DS3D Data mixersCustom low level library:libnvds_3d_multisensor_mixer.soInputs and OutputsConfiguration fileVideo mixer configuration optionsGst-NvDsUcxDescriptionRequirementsInputs and OutputsGst PropertiesExamplesGst-nvdsxferInputs and OutputsGst PropertiesHow to testUse casesSingle Stream + Multi-dGPUs SetupMultiple Streams + Multi-dGPU SetupGst-nvvideotestsrcOutputsGst PropertiesHow to testGst-nvmultiurisrcbin1. Introduction2. Features3. How to use nvmultiurisrcbin in a pipelineREST API payload definitions and sample curl commands for reference4. Gst PropertiesGst Properties directly configuring nvmultiurisrcbinGst Properties to configure each instance of nvurisrcbin created inside this binGst Properties to configure the instance of nvstreammux created inside this bin5. Important Notesnvmultiurisrcbin config recommendations and notes on expected behavior6. LimitationsGst-nvurisrcbin1. Introduction2. How to use nvurisrcbin in a pipeline3. Gst Properties3.1 Gst Properties to configure nvurisrcbinFootnotes[1]This manual uses the term dGPU (“discrete GPU”) to refer to NVIDIA GPU expansion card products such as NVIDIA® Tesla® T4, NVIDIA® Ampere and NVIDIA® GeForce® RTX 2080. This version of DeepStream SDK runs on specific dGPU products on x86_64 platforms supported by NVIDIA driver 535+  and NVIDIA® TensorRT™ 10.3.0.26 and later versions.previousApplication Migration to DeepStream 7.1 from DeepStream 7.0nextMetaData in the DeepStream SDKPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.