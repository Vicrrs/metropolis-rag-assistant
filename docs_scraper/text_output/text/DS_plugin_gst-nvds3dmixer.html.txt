Gst-nvds3dmixer — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer Plugin OverviewGst-nvds3dmixerGst-nvds3dmixer#The Gst-nvds3dmixer plugin is a customizable plugin which provides a custom library interface to load componentds3d::datamixer.nvds3dmixer mix buffers from N input pads into one output pad.The Plugin is fully configured through YAML format content or file.Gst-nvds3dmixer properties Specifications#Gst-nvds3dmixer Properties.#PropertiesDescriptionReleaseconfig-contentyaml config contentDS 7.0config-fileyaml config file pathDS 7.0Custom library Interfaces#The plugin parse the config file or content and set SinkCaps and SrcCaps. load a customds3d::datamixerfromcustom_lib_path. Create this datamixer bycustom_create_function.Supported DS3D Data mixers#DS3D Data mixers#SLData mixerData mixer custom library1DS3D Data mixer. Mix buffers from N input pads into one output pad.libnvds_3d_multisensor_mixer.soCustom low level library:libnvds_3d_multisensor_mixer.so#Mix buffers from N input pads into one output pad.Inputs and Outputs#Inputs (support N input pads)ds3d/datamapControl parametersconfig-fileconfig-contentOutputds3d/datamapsink_capsparsed from config-file:in_caps:ds3d/datamap.src_capsparsed from config-file:out_caps:ds3d/datamap.Example Inputs X 2 and OutputVideo mixer example input and output#Input at sink_0Input at sink_1OutputGstBuffer with ds3d/datamapGstBuffer with ds3d/datamapGstBuffer with ds3d/datamap{kVideoBridge2dData:value1},{kVideoBridge2dData:value2}, …{kLidarXYZI:value1},{kLidarXYZI:value2}, …{kVideoBridge2dData+0:value1},{kVideoBridge2dData+0:value2},{kLidarXYZI+1:value1}, {kLidarXYZI+1:value2}, …Configuration file#Example:name:multisensor_mixertype:ds3d::datamixerin_caps:ds3d/datamapout_caps:ds3d/datamapcustom_lib_path:libnvds_3d_multisensor_mixer.socustom_create_function:createMultiSensorMixerconfig_body:#timeout in milliseconds;timeout:50#force_sync == true will force mixer to wait for buffers from ALL inputsforce_sync:trueVideo mixer configuration options#Video mixer config_body#config-keyDescriptionExample valuetimeoutTimeout dictates the regular time interval in which mixer algorithm will run.This configuration is in ms.This configuration can dictate the frame-rate at which mixer will produce mixed output datamap buffers.Default: 33 msforce_syncMixer will wait for ALL inputs to produce output.If true, the output framerate of mixer will be = slower of all the inputs.
One may use this if all inputs are of equal frame-rate.Default: falseoutput_object2d_keyThe key name to use when generating datamap output. This key name will be used to save NvDsObjectMeta from NvDsBatchMeta as an array of ds3d::Object2DBbox.DS3D::Object2DBboxKeypreviousGst-nvds3dbridgenextGst-NvDsUcxOn this pageGst-nvds3dmixer properties SpecificationsCustom library InterfacesSupported DS3D Data mixersCustom low level library:libnvds_3d_multisensor_mixer.soInputs and OutputsConfiguration fileVideo mixer configuration optionsPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.