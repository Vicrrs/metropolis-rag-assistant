Gst-nvdsaudiotemplate — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer Plugin OverviewGst-nvdsaudi...Gst-nvdsaudiotemplate#The OSS Gst-nvdsaudiotemplate plugin is a template plugin which provides a custom library hooking interface for single/batched audio frame(s) processing.
Custom lib implementation may have algorithms to transform or process input buffers depending upon the use case.
It can supportS16LEandF32LEinputs. The plugin accepts batched NVMM HW and RAW SW buffers, and outputs batched HW and SW buffers.Inputs and Outputs#InputsNVMM or RAW Gst Buffers. Supported formats areS16LEandF32LEControl parameterscustomlib-namegpu-idcustomlib-propsOutputTransformed Gst BufferFeatures#The following table summarizes the features of the plugin.Gst-nvdsaudiotemplate features#FeatureDescriptionReleaseSimplified APIsSimplified interface to implement custom library to add any algorithm without implementing new pluginDS 5.1Easy Data AccessingEasy access to GstBuffer and it’s metadata inside custom libraryDS 5.1Synchronous and Asynchronous Buffer ProcessingBuffer_Ok is the responsibility of the plugin to push the buffer downstream.Buffer_Async is the responsibility of the custom library to push the buffer downstream.Buffer_Error and Buffer_Drop are currently not implementedDS 5.1Reference Impl.Reference implementation of custom library provides transform, transform-ip, metadata handling etc. which can be modified as per the use case.DS 5.1Abstraction APIsBufferpool creation, caps handling provided as an abstraction API inside customlib base classDS 5.1customlib_impl Interfaces#SetInitParams- Based on the negotiated caps, this API creates output buffer pool of the negotiated resolutionHandleEvent- This API handles standard Gstreamer events as well as custom events such as PAD_ADDED PAD_DELETED etc.GetCompatibleCaps- This API returns the fixated caps to be set on either SINK / SRC pad of the pluginProcessBuffer- This API passes the GstBuffer to customlib for further processingSetProperty- This API sets the customlib properties that are used by the underlying library for processingGst Properties#The following table describes the Gst properties of the Gst-nvdsaudiotemplate plugin.Gst-nvsaudiotemplate gst properties#PropertyMeaningType and RangeExample/NotesPlatformsgpu-idDevice ID of GPU to use for decoding.Integer, 0 to 4,294,967,295gpu-id=0dGPUcustomlib-namecustom library Name to be usedStringDefault: nulldGPUcustomlib-propsCustom Library Properties (key:value) string, can be set multiple times,vector is maintained internallyStringDefault: nulldGPUSample pipelines#For single stream:gst-launch-1.0audiotestsrcwave=0num-buffers=1000!audioconvert!nvdsaudiotemplate\customlib-name="libcustom_impl.so"customlib-props="noise-factor:100"!\wavenc!filesinklocation=audio.wavbuffer-mode=2For Multi-stream (Ensure that new nvstreammux is enabled):exportUSE_NEW_NVSTREAMMUX=yesgst-launch-1.0audiotestsrcwave=0!audioconvert!m.sink_0nvstreammuxname=m\!nvdsaudiotemplatecustomlib-name="libcustom_impl.so"customlib-props="noise-factor:10"!nvstreamdemuxname=dd.src_0\!wavenc!filesinklocation=audio.wavbuffer-mode=2audiotestsrcwave=1!audioconvert!m.sink_1previousGst-nvdsvideotemplatenextGst-nvvideoconvertOn this pageInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesSample pipelinesPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.