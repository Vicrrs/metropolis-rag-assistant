Gst-nvdsxfer — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer Plugin OverviewGst-nvdsxferGst-nvdsxfer#TheGst-nvdsxferplugin performs data transfer between discrete GPUs. Currently it is supported on x86 platform only.
It uses CUDA APIs to utilize NVIDIA NVLINK technology for high-speed, direct GPU-to-GPU interconnect for optimized data transfer between discrete GPUs.The plugin accepts CUDA memory based (NvBufSurfaceallocated) videoGstBuffers from upstream component. It transfer the input data to CUDA memory based (NvBufSurfaceallocated) video outputGstBuffer using the optimized NVLINK based data copy.NoteTheGst-nvdsxferplugin is currently supports Single Node, Single Application with Multi-dGPU setup based use case pipelines. Video format conversion or scaling is not supported while doing data copy between two discrete GPUs. Multi-dGPUs are connected using NVLINK Bridge Connector. Users must confirm the NVLINK state (active/inactive - Use command “nvidia-sminvlink-s” to check) between two discrete GPUs before using thenvdsxferplugin in thegst-pipeline.As shown in the diagram below input video data is copied to output over a NVLINK connected discrete GPUs.Inputs and Outputs#This section summarizes the inputs, outputs of theGst-nvdsxferplugin.InputsGst Buffer batched bufferNvDsBatchMetaRaw Video Format: NV12, I420, RGBA (NVMM)Control parametersgpu-idp2p-gpu-idbatch-sizebuffer-pool-sizenvbuf-memory-typeOutputGst Buffer batched bufferNvDsBatchMetaRaw Video Format: NV12, I420, RGBA (NVMM)Gst Properties#The following tables describes theGstproperties of theGst-nvdsxferplugin.nvdsxfer plugin properties#PropertyMeaningType and RangeExample notesbatch-sizeMaximum number of buffers in a batchUnsigned Integer. Range: 0 - 4294967295 Default: 1batch-size=2buffer-pool-sizeMaximum number of buffers in muxer’s internal poolUnsigned Integer. Range: 2 - 16 Default: 4buffer-pool-size=2gpu-idSet GPU Device IDUnsigned Integer. Range: 0 - 4294967295 Default: 0gpu-id=1p2p-gpu-idSet P2P GPU ID to enable P2P access.Default P2P access between GPUs is disabled.Integer. Range: -1 - 1024 Default: -1p2p-gpu-id=0nvbuf-memory-typeType of NvBufSurface Memory to be allocated for output buffersEnum “GstNvBufMemoryType” Default: 0, “nvbuf-mem-default”(0): nvbuf-mem-default - Default memory allocated, specific to particular platform(1): nvbuf-mem-cuda-pinned - Allocate Pinned/Host cuda memory(2): nvbuf-mem-cuda-device - Allocate Device cuda memory(3): nvbuf-mem-cuda-unified - Allocate Unified cuda memorynvbuf-memory-type=2How to test#nvdsxferis currently supported for X86 only. support with “Jetson + dGPU” is not yet enabled.Multi-dGPUs are connected using NVLINK Bridge Connector.
Use below command to confirm the NVLINK state (active/inactive) if ready to use.nvidia-sminvlink-snvdsxferplugin currently verified using 2 separate dGPU (discrete GPUs) only.Below listedgst-launch-1.0
pipelinessimulates some of the reference use cases pipelines using 2 separate dGPU (discrete GPUs).Set propertyp2p_gpu_id=0if Peer to Peer (P2P) access between discrete GPUs permitted.If P2P access is not possible then pipeline will fail, removep2p_gpu_id=0property
to make it run without P2P access.Below mentioned referencegst-launch-1.0 pipelinesuse legacystreammuxby default.
Newnvstreammuxcan also be used by enabling USE_NEW_NVSTREAMMUX=yes environment variable with appropriate properties set for newstreammuxpluginNotegst-launch-1.0 pipelinesmentioned in theUse casessection, are not optimal pipelines though can demonstratenvdsxferplugin usage for various use cases to achieve better performance and GPU utilization.Notedeepstream-multigpu-nvlink-testsample application can demonstrate nvdsxfer plugin based gstreamer pipeline.
Refer/opt/nvidia/deepstream/deepstream/sources/apps/sample_apps/deepstream-multigpu-nvlink-test/READMEfor usage and application supported feature.Use cases#Below referencegst-launch-1.0commands uses h265 elementary stream as input. In order to use DeepStream SDK provided sample mp4 stream, use following command to convert from mp4 container file to h265 elementary stream.cd /opt/nvidia/deepstream/deepstream/
gst-launch-1.0 filesrc location= samples/streams/sample_1080p_h265.mp4 ! qtdemux ! h265parse ! 'video/x-h265,stream-format=byte-stream' ! filesink location= samples/streams/sample_1080p.h265Single Stream + Multi-dGPUs Setup#Running “Decode + StreamMux + PGIE” and “Tracker + SGIE (Multiple)” on separate dGPUsgst-launch-1.0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0nvstreammuxname=mbatch-size=1gpu-id=0\width=1920height=1080nvbuf-memory-type=2!queue!nvinfergpu-id=0batch-size=1\config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!\nvdsxfergpu-id=1p2p_gpu_id=0!queue!nvtrackergpu-id=1enable-batch-process=1\ll-lib-file=lib/libnvds_nvmultiobjecttracker.soll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!\queue!nvinfergpu-id=1batch-size=16unique-id=2config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!\queue!nvinfergpu-id=1batch-size=16unique-id=3config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!\queue!fpsdisplaysinkvideo-sink=fakesinksync=0-e-vRunning “Decode + StreamMux” and “PGIE + Tracker + SGIE (Multiple)” on separate dGPUsgst-launch-1.0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0nvstreammuxname=mbatch-size=1gpu-id=0\width=1920height=1080nvbuf-memory-type=2!queue!nvdsxfergpu-id=1p2p_gpu_id=0!queue!\nvinfergpu-id=1batch-size=1config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!\nvtrackergpu-id=1enable-batch-process=1ll-lib-file=lib/libnvds_nvmultiobjecttracker.so\ll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!queue!nvinfergpu-id=1batch-size=16unique-id=2\config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!queue!nvinfergpu-id=1batch-size=16unique-id=3\config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!queue!fpsdisplaysinkvideo-sink=fakesinksync=0-e-vMultiple Streams + Multi-dGPU Setup#Running “Multi-instance(4) decode + Streammux + PGIE” on single dGPU and “ tracker + SGIE - multiple models” on separate dGPUgst-launch-1.0nvstreammuxname=mbatch-size=4gpu-id=0width=1920height=1080nvbuf-memory-type=2!queue!\nvinfergpu-id=0batch-size=4config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!\nvdsxfergpu-id=1p2p_gpu_id=0!queue!nvtrackergpu-id=1enable-batch-process=1\ll-lib-file=lib/libnvds_nvmultiobjecttracker.soll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!queue!\nvinfergpu-id=1batch-size=16unique-id=2config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!queue!\nvinfergpu-id=1batch-size=16unique-id=3config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!queue!\fpsdisplaysinkvideo-sink=fakesinksync=0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_1multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_2multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_3-e-vRunning “Multi-instance(4) decode + StreamMux” on single-dGPU and “PGIE + Tracker + SGIE(Multiple)” on separate dGPUgst-launch-1.0nvstreammuxname=mbatch-size=4gpu-id=0width=1920height=1080nvbuf-memory-type=2!queue!\nvdsxfergpu-id=1p2p_gpu_id=0!queue!nvinfergpu-id=1batch-size=4config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!\nvtrackergpu-id=1enable-batch-process=1ll-lib-file=lib/libnvds_nvmultiobjecttracker.so\ll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!queue!nvinfergpu-id=1batch-size=16unique-id=2\config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!queue!nvinfergpu-id=1batch-size=16unique-id=3\config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!queue!fpsdisplaysinkvideo-sink=fakesinksync=0\multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0\multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_1\multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_2\multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_3-e-vRunning “Multi-instance(8) decode” on multi-dGPU and “StreamMux + PGIE + Tracker + SGIE(Multiple)” on any one of the dGPUgst-launch-1.0nvstreammuxname=mbatch-size=8gpu-id=0width=1920height=1080nvbuf-memory-type=2!queue!nvinfergpu-id=0batch-size=8\config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!nvtrackergpu-id=0enable-batch-process=1\ll-lib-file=lib/libnvds_nvmultiobjecttracker.soll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!queue!\nvinfergpu-id=0batch-size=16unique-id=2config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!queue!\nvinfergpu-id=0batch-size=16unique-id=3config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!queue!\fpsdisplaysinkvideo-sink=fakesinksync=0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_1multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_2multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_3multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=1cudadec-memtype=0!queue!nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_4multifilesrc\location=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=1cudadec-memtype=0!queue!\nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_5multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=1cudadec-memtype=0!queue!nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_6multifilesrc\location=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=1cudadec-memtype=0!queue!\nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_7-e-vRunning “Multi-instance(8) decode” on multi-dGPU, “StreamMux + PGIE” and  “Tracker + SGIE(Multiple)” on separate dGPUgst-launch-1.0nvstreammuxname=mbatch-size=8gpu-id=0width=1920height=1080nvbuf-memory-type=2!queue!nvinfergpu-id=0batch-size=8\config-file-path=samples/configs/deepstream-app/config_infer_primary.txt!queue!nvdsxfergpu-id=1p2p_gpu_id=0!queue!nvtrackergpu-id=1\enable-batch-process=1ll-lib-file=lib/libnvds_nvmultiobjecttracker.soll-config-file=samples/configs/deepstream-app/config_tracker_NvDCF_perf.yml!\queue!nvinfergpu-id=1batch-size=16unique-id=2config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehiclemake.txt!\queue!nvinfergpu-id=1batch-size=16unique-id=3config-file-path=samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txt!\queue!fpsdisplaysinkvideo-sink=fakesinksync=0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!\queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_0multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!\queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_1multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!\queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_2multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!\queue!nvv4l2decodergpu-id=0cudadec-memtype=0!queue!m.sink_3multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!\queue!nvv4l2decodergpu-id=1cudadec-memtype=0!queue!nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_4multifilesrc\location=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=1cudadec-memtype=0!queue!\nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_5multifilesrclocation=samples/streams/sample_1080p.h265loop=true!h265parse!queue!\nvv4l2decodergpu-id=1cudadec-memtype=0!queue!nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_6multifilesrc\location=samples/streams/sample_1080p.h265loop=true!h265parse!queue!nvv4l2decodergpu-id=1cudadec-memtype=0!queue!\nvdsxfergpu-id=0p2p_gpu_id=1!queue!m.sink_7-e-vpreviousGst-NvDsUcxnextGst-nvvideotestsrcOn this pageInputs and OutputsGst PropertiesHow to testUse casesSingle Stream + Multi-dGPUs SetupMultiple Streams + Multi-dGPU SetupPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.