Gst-nvdspreprocess (Alpha) — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formGStreamer Plugin OverviewGst-nvdsprep...Gst-nvdspreprocess (Alpha)#The Gst-nvdspreprocess plugin is a customizable plugin which provides a custom library interface for preprocessing on input streams. Each stream can have its own preprocessing requirements. (e.g. per stream ROIs - Region of Interests processing)
Streams with same preprocessing  requirements are grouped and processed together. These requirements can be specified via a config file.
Refer to sectionGst-nvdspreprocess File Configuration Specificationsbelow for more details.Default plugin implementation provides two functionalities.Streams with predefined ROIs (Region of Interests) are scaled and format converted as per the network requirements for inference. Per stream ROIs are specified in the config file.It prepares a raw tensor from the scaled & converted ROIs. It is passed to the downstream plugins via user metadata. Downstream plugins can access this tensor for inference.The default custom library (nvdspreprocess_lib) provided with the plugin implements these functionalities. It contains the group transformation (scaling and conversion functionality per group) and tensor preparation functions for 2d convolution NCHW/NHWC models. User can implement its own library with group transformation functions and tensor preparation function as per the requirements.This plugin can operate in two modes PGIE and SGIE. Preprocess with PGIE mode is used to process the given ROI/Frame on which we want to perform primary inferencing. Preprocess with SGIE mode is used to process the detected objects within the given ROI/Frame on which we want to perform secondary inferencing.Inputs and Outputs#InputsInput Video Gst BuffersMetadata (NvDsBatchMeta)Control parametersconfig-fileOutputOutput Video Gst BuffersMetadata (NvDsBatchMeta) + User Metadata at batch level (NvDsPreProcessBatchMeta)Features#The following table summarizes the features of the plugin.Gst-nvdspreprocess features#FeatureDescriptionReleasePer stream/group of streams ROI processingProcess on the pre-defined ROIs having same processing algorithm inside a groupDS 6.0Processing on full frames/ROIsEnable process-on-roi inside [group-*] to process on ROIsDS 6.0Custom library interfaceCustom functionality using group transformation and tensor preparation functionsDS 6.0Custom group transformation functionFor each group separate custom transformation functions can be provided from custom lib (e.g. scale & conversion)DS 6.0Custom tensor preparation functionCustom tensor preparation function from custom library to prepare raw tensor from already transformed ROIs/full-framesDS 6.0Attach user meta at batch levelUser meta (NvDsPreProcessBatchMeta) having raw tensor and Scaled & converted ROIsDS 6.0Support for SGIE ModeSupports processing on objects detected by PGIE modelDS 6.2Custom library Interfaces#custom_transform => An Interface to implement custom transformation for different group of streams. Default implementation provides group transformation functionalities of ROIs specified in the config fie.custom_tensor_function => An interface to provide custom tensor preparation function. Default implementation prepares raw tensor from transformed ROIsGst-nvdspreprocess File Configuration Specifications#The Gst-nvdspreprocess configuration file uses a “Key File” format described inhttps://specifications.freedesktop.org/desktop-entry-spec/latest.
Refer toconfig_preprocess.txtat/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt.
The[property]group configures the general behavior of the plugin.
The[group-<id>]group configures ROIs/full-frames for a group of streams withsrc-idsandcustom-input-transformation-functionfrom custom lib.
The[user-configs]group configures parameters required by the custom library, which is passed on to custom lib through a map of <string,string> as key-value pair.
custom lib needs to parse the values accordingly.The following two tables describes the keys supported for[property]groups and[group-<id>]groups respectively.Gst-nvdspreprocess property Group Supported Keys#PropertyMeaningType and RangeExampleenableIf set then to enable the plugin else in passthrough modeBooleanenable=1unique-idUniquely identify the metadata generated by this elementInteger, | 0 to 4,294,967,295unique-id=1gpu-idDevice ID of GPU to use for pre-processing (dGPU only)Integer,0-4,294,967,295gpu-id=1process-on-framePreprocessing Modes 1=PGIE Mode 0=SGIE ModeBooleanprocess-on-frame=1target-unique-idsList of component gie-id for which tensor is preparedSemicolon delimited integer(gie-ids) array of values >=0target-unique-ids=3;4;5operate-on-gie-idUnique gie-id whoes metadata is to be preprocessed (ignored if process-on-frame enabled)Integer, 0 to 4,294,967,295operate-on-gie-id=1network-input-orderOrder of the network input layerInteger 0=NCHW 1=NHWC 2=CUSTOMnetwork-input-order=0network-input-shapeTensor shape of network input layer as per network-input-orderSemicolon delimited integer array of values > 0network-input-shape=60;3;368;640maintain-aspect-ratioIf set then maintain the aspect ratio while scalingBooleanmaintain-aspect-ratiosymmetric-paddingIf set then pad symmetrically (ignored if maintain-aspect-ratio disabled)Booleansymmetric-paddingprocessing-widthWidth at which ROIs scaledInteger>0processing-width=640processing-heightHeight at which ROIs scaledInteger>0processing-height=368scaling-buf-pool-sizeSize of scaling buffer poolInteger>0scaling-buf-pool-size=6tensor-buf-pool-sizeSize of tensor buffer poolInteger>0tensor-buf-pool-size=6network-color-formatColor format of modelInteger 0=RGB 1=BGR 2=GRAYnetwork-color-format=0tensor-data-typeData format for inferenceInteger 0=FP32 1=UINT8 2=INT8 3=UINT32 4=INT32 5=FP16tensor-data-type=0tensor-nameNetwork input layer nameStringtensor-name=Input_1scaling-pool-memory-typeMemory type for scaling buffer poolInteger  0=NVBUF_MEM_DEFAULT 1=NVBUF_MEM_CUDA_PINNED 2=NVBUF_MEM_CUDA_DEVICE 3=NVBUF_MEM_CUDA_UNIFIED 4=NVBUF_MEM_SURFACE_ARRAYscaling-pool-memory-type=2scaling-pool-compute-hwType of computing hardware for scalingInteger 0=NvBufSurfTransformCompute_Default 1=NvBufSurfTransformCompute_GPU 2=NvBufSurfTransformCompute_VICscaling-pool-compute-hw=0scaling-filterScaling interpolation methodInteger 0=NvBufSurfTransformInter_Nearest 1=NvBufSurfTransformInter_Bilinear 2=NvBufSurfTransformInter_Algo 3=NvBufSurfTransformInter_Algo2 4=NvBufSurfTransformInter_Algo3 5=NvBufSurfTransformInter_Algo4 6=NvBufSurfTransformInter_Defaultscaling-filter=0custom-lib-pathPath of custom library .so fileStringcustom-lib-path=/opt/nvidia/deepstream/deepstream/lib/gst-plugins/libcustom2d_preprocess.socustom-tensor-preparation-functionName of tensor preparation function from custom libStringcustom-tensor-preparation-function=CustomTensorPreparationGst-nvdspreprocess group-<id> Group Supported Keys#PropertyMeaningType and RangeExamplesrc-idsSource IDs on which this group appliesSemicolon delimited integer array of values >=0src-ids=0;1;2;3custom-input-transformation-functionName of Custom input transformation function from custom libraryStringcustom-input-transformation-function=CustomTransformationprocess-on-roiIf enabled process on ROIs else on full-frames (ignored if process-on-frame disabled)Booleanprocess-on-roi=1roi-params-src-<id>Roi coordinates for source <id>. for each ROI specify left;top;width;height defining the ROI if process-on-roi enabled.Semicolon delimited integer array of values >=0roi-params-0=0;540;900;500;960;0;900;500operate-on-class-idsPreprocessing is done only on the objects belongs to these class-ids (ignored if process-on-frame enabled)Semicolon delimited integer(class-ids) array of values >=0operate-on-class-ids=0;1process-on-all-objectsIf enabled process all the objects else process the objects within the roi (ignored if process-on-frame enabled)Booleanprocess-on-all-objects=1draw-roiIf enabled specified roi’s are drawn on display else roi’s are not drawnBooleandraw-roi=1roi-colorColor of roi to be displayedSemicolon delimited color components values R;G;B;Aroi_color=0;1;1;1input-object-min-widthMinimum width of objects which are to be processedInteger, ≥0input-object-min-width=100input-object-min-heightMinimum height of objects which are to be processedInteger, ≥0input-object-min-height=100input-object-max-widthMaximum width of objects which are to be processedInteger, ≥0input-object-max-width=500input-object-max-heightMaximum height of objects which are to be processedInteger, ≥0input-object-max-height=500The following table describes the keys supported for[user-configs]group for custom librarynvdspreprocess_lib.Gst-nvdspreprocess user-configs Group Supported Keys#PropertyMeaningType and RangeExamplepixel-normalization-factorfactor at which pixels are scaledFloatpixel-normalization-factor=­0.031offsetsArray of mean values of color components to be subtracted from each pixel. Array length must equal the number of color components in the frame. The plugin multiplies mean values by pixel-normalization-factorSemicolon delimited float array of values ≥0offsets=77.5;21.2;11.8mean-filepathname of mean data file (PPM format)Stringmean-file=/home/ubuntu/model_meanfile.ppmThe following table describes the keys supported for[user-configs]group for custom librarylibnvds_custom_sequence_preprocess.so. which gets used indeepstream-3d-action-recognitionsample app.user-configs properties for custom sequence preprocess#PropertyMeaningType and RangeExamplechannel-scale-factorsscale factor list for each channelSemicolon delimited float arraychannel-scale-factors=
0.007843137;0.007843137;0.007843137channel-mean-offsetsdata mean offsets for each channelSemicolon delimited float arraychannel-mean-offsets=127.5;127.5;127.5stridesequence sliding stride for each batched sequneceUnsigned Integer, value >= 1stride=1subsampleSubsample rates for inference images in each sequenceUnsigned Integer, value >= 0subsample=0Gst Properties#The following table describes the Gst properties of the Gst-nvdspreprocess plugin.Gst-nvspreprocess gst properties#PropertyMeaningType and RangeExample notesunique-idUniquely identify the metadata generated by this elementInteger, | 0 to 4,294,967,295unique-id=1gpu-idDevice ID of GPU to use for pre-processing (dGPU only)Integer,0-4,294,967,295gpu-id=1config-filePath of configuration file for the Gst-nvdspreprocess elementStringconfig-file=config_preprocess.txtenableEnable gst-nvdspreprocess plugin or set in passthrough modeBooleanenable=1process-on-framePreprocessing Modes 1=PGIE Mode 0=SGIE ModeBooleanprocess-on-frame=1target-unique-idsList of component gie-id for which tensor is preparedSemicolon delimited integer(gie-ids) array of values >=0target-unique-ids=3;4;5operate-on-gie-idUnique gie-id whoes metadata is to be preprocessed (ignored if process-on-frame enabled)Integer, 0 to 4,294,967,295operate-on-gie-id=1Sample pipelines#Given below are some sample pipelines to demonstrate preprocess plugin’s usage, please set the appropriate configuration file and library paths.Preprocess in PGIE mode for single stream (dGPU):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txt\input-tensor-meta=1batch-size=7!nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nveglglessinkPreprocess in PGIE mode for single stream (Jetson):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txt\input-tensor-meta=1batch-size=2!nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nv3dsinkPreprocess in PGIE mode for Multi-stream (dGPU):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=4width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txt\input-tensor-meta=1batch-size=8!nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nveglglessink\filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!\m.sink_1filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!\nvv4l2decoder!m.sink_2filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_3Preprocess in PGIE mode for Multi-stream (Jetson):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=4width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txt\input-tensor-meta=1batch-size=8!nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nv3dsink\filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!\m.sink_1filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!\nvv4l2decoder!m.sink_2filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_3Preprocess in PGIE and SGIE Mode for single stream (dGPU):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txtunique-id=1\batch-size=2input-tensor-meta=1!nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess_sgie.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txtinput-tensor-meta=1unique-id=3!\nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nveglglessinkPreprocess in PGIE and SGIE Mode for single stream (Jetson):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txtunique-id=1\batch-size=2input-tensor-meta=1!nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess_sgie.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txtinput-tensor-meta=1unique-id=3!\nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nv3dsinkPreprocess in PGIE and SGIE Mode for Multi-stream (dGPU):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txtunique-id=1\batch-size=8input-tensor-meta=1!nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess_sgie.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txtinput-tensor-meta=1unique-id=3!\nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nveglglessinkfilesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!\qtdemux!h264parse!nvv4l2decoder!m.sink_1filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!\m.sink_2filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!m.sink_3Preprocess in PGIE and SGIE Mode for Multi-stream (Jetson):gst-launch-1.0filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!\h264parse!nvv4l2decoder!m.sink_0nvstreammuxname=mbatch-size=1width=1920height=1080!nvvideoconvert!\nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_primary.txtunique-id=1\batch-size=8input-tensor-meta=1!nvdspreprocessconfig-file=/opt/nvidia/deepstream/deepstream/sources/gst-plugins/gst-nvdspreprocess/config_preprocess_sgie.txt!\nvinferconfig-file-path=/opt/nvidia/deepstream/deepstream/samples/configs/deepstream-app/config_infer_secondary_vehicletypes.txtinput-tensor-meta=1unique-id=3!\nvmultistreamtilerwidth=1920height=1080!nvvideoconvert!nvdsosd!nv3dsinkfilesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!\qtdemux!h264parse!nvv4l2decoder!m.sink_1filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!\m.sink_2filesrclocation=/opt/nvidia/deepstream/deepstream/samples/streams/sample_1080p_h264.mp4!qtdemux!h264parse!nvv4l2decoder!m.sink_3previousMetaData in the DeepStream SDKnextGst-nvinferOn this pageInputs and OutputsFeaturesCustom library InterfacesGst-nvdspreprocess File Configuration SpecificationsGst PropertiesSample pipelinesPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.