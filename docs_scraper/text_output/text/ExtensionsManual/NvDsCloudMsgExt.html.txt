NvDsCloudMsgExt â€” DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsNvDsCloudMsgExtNvDsCloudMsgExt#Components for cloud messagingUUID: d16b1366-dba2-47f6-95fc-b09b39f885deVersion: 1.6.0Author: NVIDIALicense: ProprietaryComponents#nvidia::deepstream::NvDsMessage#Data component for a cloud message. Consists of the topic for the message and a buffer containing the message contents.Component ID: 45d73bc1-7ffb-43af-b11f-c3202fde0902Base Type:Defined in: nvdscloudmsg/nvds_message.hppnvidia::deepstream::NvDsMsgRelayTransmitter#Helper component to transmit message payload to a receiver component. This component does not generate any messages. Message producer components use methods of this component to relay messages to consumer components.Component ID: 68568563-6464-41f6-912e-d25038a2c299Base Type: nvidia::deepstream::INvDsComponentDefined in: nvdscloudmsg/nvds_msg_relay_transmitter.hppnvidia::deepstream::NvDsMsgRelayReceiver#Helper component to receive message payloads from a transmitter component. This component does not handle the messages. Message consumer components use methods of this component to implement and set a callback for when messages are received.Component ID: 5c6861a2-706e-4311-b4e6-936846415ba3Base Type: nvidia::deepstream::INvDsComponentDefined in: nvdscloudmsg/nvds_msg_relay_receiver.hppnvidia::deepstream::NvDsMsgBrokerC2DReceiver#Receive messages from cloud via a message broker for the user configured topics using a protocol library implementing the DeepStream messaging interfaceNvDsMsgApi.
Refer toMessaging InterfaceComponent ID: 88ff8361-8045-4457-b257-5f19db143409Base Type: nvidia::deepstream::INvDsComponentParameters#cfg-filePath of a configuration file to be passed to the message protocol adapter.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEconn-strConnection string of backend message broker server (e.g. foo.bar.com;80;dsapp1).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGdebugDebug flag to print message contents as string.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseproto-libPath of the message protocol adaptor library implementing theNvDsMsgAPIinterface.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILEtopicsList of topics that the component should subscribe to. Specified as a semi-colon separated list of strings, for example, topic1;topic2;topic3.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGtxHandle to the helper componentNvDsMsgRelayTransmitterfor pushing messages to other components.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMsgRelayTransmitternvidia::deepstream::NvDsMsgBrokerD2CTransmitter#Send messages to cloud via a message broker using a protocol library implementing the DeepStream messaging interfaceNvDsMsgApi.
Refer toMessaging InterfaceComponent ID: 585ad84e-b5af-4997-b3b3-d2e10d50a2b8Base Type: nvidia::deepstream::INvDsComponentParameters#cfg-filePath of a configuration file to be passed to the message protocol adapter.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEconn-strConnection string of backend message broker server (e.g. foo.bar.com;80;dsapp1).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGdebugDebug flag to print message contents as string.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseproto-libPath of the message protocol adaptor library implementing theNvDsMsgAPIinterface.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILErxHandle to the helper componentNvDsMsgRelayReceiverfor getting messages pushed by other components.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMsgRelayReceivernvidia::deepstream::NvDsMsgRelay#Component to connect anNvDsMsgRelayTransmitterand anNvDsMsgRelayReceivercomponent.Component ID: 5a1ea6d3-20f6-4c4a-b480-1a26bd89ef60Base Type: nvidia::deepstream::INvDsConnectionParameters#sourceHandle to anNvDsMsgRelayTransmittercomponent which will transmit the messages.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMsgRelayTransmittertargetHandle to anNvDsMsgRelayReceivercomponent which will transmit the messages.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMsgRelayReceivernvidia::deepstream::NvDsMsgBroker#Sends payload metadata to the remote server.
Refer tonvmsgbroker pluginComponent ID: 9e7c325b-7368-39d4-ae5c-b9c245e1342cBase Type: nvidia::deepstream::INvDsElementParameters#asyncGo asynchronously toPAUSED.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: TrueblocksizeSize in bytes to pull per buffer (0 = default).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 4096comp-idBy default this element operates on allNvDsPayloadtype meta. It may be restricted to a specificNvDsPayloadmeta by this component id.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0configName of configuration file with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEconn-strconnection string of backend server (e.g. foo.bar.com;80;dsapp1).Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGenable-last-sampleEnable the last-sample property.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: TrueinHandle to annvidia::deepstream::NvDsStaticInputcomponent. Supports any format.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputmax-bitrateThe maximum bits per second to render (0 = disabled).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0max-latenessMaximum number of nanoseconds that a buffer can be late by, before it is dropped (-1 unlimited).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1new-apiUse newlibnvds_msgbrokerAPI.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseproto-libName of protocol adaptor library with absolute path.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILEqosGenerate Quality-of-Service events upstream.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falserender-delayAdditional render delay of the sink in nanoseconds.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0syncSync on the clock.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Truethrottle-timeThe time to keep between rendered buffers (0 = disabled).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0topicName of the message topic.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGDefault:ts-offsetTimestamp offset in nanoseconds.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0nvidia::deepstream::NvDsMsgConverter#Transforms buffer meta to schema or payload meta.
Refer tonvmsgconv pluginComponent ID: 3e9033bc-e428-3358-bbb6-3455b2a492e8Base Type: nvidia::deepstream::INvDsElementParameters#comp-idBy default this element operates on allNvDsEventMsgMeta. It may be restricted to a specificNvDsEventMsgMetameta by this component id.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0configName of configuration file with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEdebug-payload-dirAbsolute path of the directory to dump payloads for debugging.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEframe-intervalFrame interval at which payload is generatedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 30inHandle to annvidia::deepstream::NvDsStaticInputcomponent. Supports any format.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputmsg2p-libName of payload generation library with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEmsg2p-newapiUse new API which supports publishing multiple payloads usingNvDsFrameMetaFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsemultiple-payloadsUse API which supports receiving multiple payloads from converter lib.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalseoutHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supports any format.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputpayload-typeType of payload to be generated.Valid values:0: PAYLOAD_DEEPSTREAM1: PAYLOAD_DEEPSTREAM_MINIMAL256: PAYLOAD_RESERVED257: PAYLOAD_CUSTOMFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0nvidia::deepstream::NvDsMsgConvBroker#DeepStreamSDK Message Broker Sink Bin. Internal Pipeline:queue->nvmsgconv->nvmsgbrokerComponent ID: 76975c14-1e84-325f-867c-4a291ce310c1Base Type: nvidia::deepstream::INvDsElementParameters#debug-payload-dirAbsolute path of the directory to dump payloads for debugging.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEdisable-msgconvSync on the clock.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalseinHandle to annvidia::deepstream::NvDsStaticInputcomponent. Supports any format.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputmsg-broker-comp-idBy default this element operates on allNvDsPayloadmeta. It may be restricted to a specificNvDsPayloadmeta by this component id.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0msg-broker-configName of configuration file with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEmsg-broker-conn-strconnection string of backend server (e.g. foo.bar.com;80;dsapp1).Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGmsg-broker-proto-libName of protocol adaptor library with absolute path.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILEmsg-conv-comp-idBy default this element operates on allNvDsEventMsgMetameta. It may be restricted to a specificNvDsEventMsgMetameta by this component id.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0msg-conv-configName of configuration file with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEmsg-conv-msg2p-libName of payload generation library with absolute path.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEmsg-conv-payload-typeType of payload to be generated.Valid values:0: PAYLOAD_DEEPSTREAM1: PAYLOAD_DEEPSTREAM_MINIMAL256: PAYLOAD_RESERVED257: PAYLOAD_CUSTOMFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0multiple-payloadsUse API which supports receiving multiple payloads from converter lib.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsenew-apiUse newlibnvds_msgbrokerAPI.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalsesyncSync on the clock.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: TruetopicName of the message topic.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGpreviousNvDsBaseExtnextNvDsConverterExtOn this pageComponentsnvidia::deepstream::NvDsMessagenvidia::deepstream::NvDsMsgRelayTransmitternvidia::deepstream::NvDsMsgRelayReceivernvidia::deepstream::NvDsMsgBrokerC2DReceiverParametersnvidia::deepstream::NvDsMsgBrokerD2CTransmitterParametersnvidia::deepstream::NvDsMsgRelayParametersnvidia::deepstream::NvDsMsgBrokerParametersnvidia::deepstream::NvDsMsgConverterParametersnvidia::deepstream::NvDsMsgConvBrokerParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright Â© 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.