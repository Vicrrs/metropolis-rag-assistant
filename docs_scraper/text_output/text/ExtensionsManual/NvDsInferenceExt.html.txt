NvDsInferenceExt — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsNvDsInferenceExtNvDsInferenceExt#NVIDIA DeepStreamSDK Streaming Inference components.UUID: 0b02963e-c24e-4c13-ace0-c4cdf36c7c71Version: 1.6.0Author: NVIDIALicense: ProprietaryComponents#nvidia::deepstream::NvDsModelUpdatedSignal#Reports the on-the-fly model update status. This is a connector component. This component must be linked to ‘NvDsInferVideo’ which emits the signal and another component which will handle the signal callback.Component ID: 5b154229-a6ce-342c-8ca6-8f045316a912Base Type: nvidia::deepstream::INvDsSignalDefined in: nvdsinference/nvdsinference_interfaces.hppnvidia::deepstream::NvDsInferVideoPropertyController#Helper component to control properties ofnvidia::deepstream::NvDsInferVideo. This is a connector component. It must be linked to two components:NvDsInferVideocomponent to control the properties, and another component which will set/get properties via the helper component APIs.Component ID: 6b5f8068-fb7d-301f-ad5a-55fbf81d1b6fBase Type: nvidia::deepstream::INvDsPropertyControllerDefined in: nvdsinference/nvdsinference_interfaces.hppnvidia::deepstream::NvDsInferVideo#DeepStreamSDK TensorRT Bin. Internal Pipeline:queue->nvvidconv->nvinfer.Component ID: 18e494e2-4c0e-3589-97be-06ece23a7692Base Type: nvidia::deepstream::INvDsElementParameters#batch-sizeMaximum batch size for inference.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 1config-file-pathPath to the configuration file for this instance ofnvinfer.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEfilter-out-class-idsIgnore metadata for objects of specified class ids Use string with values of class ids in ClassID (int) to set the property. e.g. 0;2;3.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGgpu-idSet GPU Device ID.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0infer-model-configHandle to aINvDsInferModelConfigComponentcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::INvDsInferModelConfigComponentinfer-on-class-idsOperate on objects with specified class ids Use string with values of class ids in ClassID (int) to set the property. e.g. 0:2:3.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGinfer-on-gie-idInfer on metadata generated by GIE with this unique ID. Set to -1 to infer on all metadata.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1input-tensor-metaUse preprocessed input tensors attached as metadata instead of preprocessing inside the pluginFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLintervalSpecifies number of consecutive batches to be skipped for inference.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0model-engine-fileAbsolute path to the pre-generated serialized engine file for the model.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEmodel-updated-signalHandle to aNvDsModelUpdatedSignalcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsModelUpdatedSignaloutput-instance-maskInstance mask expected in network output and attach it to metadata.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseoutput-tensor-metaAttach inference tensor outputs as buffer metadata.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseprocess-modeInfer processing mode.Valid values:1: primary2: secondaryFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 1property-controllerProperty Controller forNvDsInferVideocomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsInferVideoPropertyControllerraw-output-file-writeWrite raw inference output to file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseunique-idUnique ID for the element. Can be used to identify output of the element.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 15video-inHandle to anvidia::deepstream::NvDsStaticInputcomponent. Supported formats -video(NV12,RGBA).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputvideo-outHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -video(NV12,RGBA).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputnvidia::deepstream::NvDsAsr#Performs automatic speech recognition on input audio.
Refer tonvdsasr pluginComponent ID: f74d67fc-711e-364b-8a8b-e5a349304d15Base Type: nvidia::deepstream::INvDsElementParameters#audio-inHandle to annvidia::deepstream::NvDsStaticInputcomponent. Supported formats -audio(S8,U8,S16LE,S16BE,U16LE,U16BE,S24_32LE,S24_32BE,U24_32LE,U24_32BE,S32LE,S32BE,U32LE,U32BE,S24LE,S24BE,U24LE,U24BE,S20LE,S20BE,U20LE,U20BE,S18LE,S18BE,U18LE,U18BE,F32LE,F32BE,F64LE,F64BE).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputaudio-outHandle to anvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -audio(S8,U8,S16LE,S16BE,U16LE,U16BE,S24_32LE,S24_32BE,U24_32LE,U24_32BE,S32LE,S32BE,U32LE,U32BE,S24LE,S24BE,U24LE,U24BE,S20LE,S20BE,U20LE,U20BE,S18LE,S18BE,U18LE,U18BE,F32LE,F32BE,F64LE,F64BE).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputconfig-fileSet config file path foralgoctxin custom lib.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILEcreate-speech-ctx-funcSymbol name to createalgoctxin custom lib.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGDefault: creat_asr_ctxcustomlib-nameSet custom library Name to be used.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEDefault: libnvds_speech_riva.sonvidia::deepstream::NvDsInferAudio#DeepStreamSDK Audio Inference plugin.
Refer tonvinferaudio pluginComponent ID: 582e8e1d-197c-32ce-a79e-3630785e9408Base Type: nvidia::deepstream::INvDsElementParameters#audio-framesizeFrame size to use for transform.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_UINT64audio-hopsizeHop size to use for transform.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_UINT64audio-inHandle to annvidia::deepstream::NvDsStaticInputcomponent. Supported formats -audio(S16LE).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputaudio-outHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -audio(S16LE).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputaudio-transformTransform name and parameters.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGbatch-sizeMaximum batch size for inference.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 1classifier-typeType of classifier of this instance ofnvinfer.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGconfig-file-pathPath to the configuration file for this instance ofnvinfer.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEgpu-idSet GPU Device IDFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0infer-model-configHandle to aINvDsInferModelConfigComponentcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::INvDsInferModelConfigComponentmodel-engine-fileAbsolute path to the pre-generated serialized engine file for the model.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEoutput-tensor-metaAttach inference tensor outputs as buffer metadata.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseraw-output-file-writeWrite raw inference output to file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseunique-idUnique ID for the element. Can be used to identify output of the element.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 15nvidia::deepstream::NvDsPreProcess#Preprocessing using custom algorithms for different streams. For more information refer tohttps://docs.nvidia.com/metropolis/deepstream/dev-guide/text/DS_plugin_gst-nvdspreprocess.htmlComponent ID: 2abf4770-e210-3f41-abd6-0555b8ca107fBase Type: nvidia::deepstream::INvDsElementParameters#unique-idUnique ID for the element. Can be used to identify output of the elementFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 15enableEnable gst-nvdspreprocess plugin, or set in passthrough modeFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Truegpu-idSet GPU Device IDFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0config-filePreprocess Config FileFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_FILEvideo-outHandle to anvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -video(NV12,RGBA,I420)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputvideo-inHandle to anvidia::deepstream::NvDsStaticInputcomponent. Supported formats -video(NV12,RGBA,I420)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputpreviousNvDsDewarperExtnextNvDsInferenceUtilsExtOn this pageComponentsnvidia::deepstream::NvDsModelUpdatedSignalnvidia::deepstream::NvDsInferVideoPropertyControllernvidia::deepstream::NvDsInferVideoParametersnvidia::deepstream::NvDsAsrParametersnvidia::deepstream::NvDsInferAudioParametersnvidia::deepstream::NvDsPreProcessParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.