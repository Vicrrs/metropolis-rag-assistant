NvDsSourceExt — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsNvDsSourceExtNvDsSourceExt#NVIDIA DeepStream source and input related components.UUID: a632d022-3425-4848-9074-e6483ef74366Version: 1.6.0Author: NVIDIALicense: ProprietaryComponents#nvidia::deepstream::NvDsSourceInfoLoader#Load source information from a YAML file. Other components can call methods of this component to read data from the file.Component ID: c68a0fa2-68f9-437c-b828-fb91b2a25376Base Type: nvidia::gxf::ComponentDefined in: nvdssource/source_info_loader.hppParameters#source-info-fileYAML file containing source informationFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEnvidia::deepstream::NvDsStartSrAction#Start smart record. This is a connector component. This component must be linked to another component which triggers the action andNvDsSingleSrcInputcomponent which performs the action.Component ID: 77383657-3462-3e80-995d-b625fc75fdb7Base Type: nvidia::deepstream::INvDsActionDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsStopSrAction#Stop smart record. This is a connector component. This component must be linked to another component which triggers the action andNvDsSingleSrcInputcomponent which performs the action.Component ID: ecd8c288-f4b3-3394-9adc-0abb88bf02feBase Type: nvidia::deepstream::INvDsActionDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsSrDoneSignal#Callback indicating recording finished along with information on the recorded file. This is a connector component. This component must be linked toNvDsSingleSrcInputwhich emits the signal and another component which will handle the signal callback.Component ID: 81ff2b7c-3614-342e-94f9-904ba5d46ee5Base Type: nvidia::deepstream::INvDsSignalDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsSingleSrcInput#Nvidia DeepStreamSDKNvUriSrcBin.
Refer tonvurisrcbin pluginComponent ID: b4e59610-37c9-36fb-bfe0-7bc41e87c006Base Type: nvidia::deepstream::INvDsElementParameters#audio-out-%uHandle to annvidia::deepstream::NvDsDynamicOutputcomponent. Supported formats -audio(S8,U8,S16LE,S16BE,U16LE,U16BE,S24_32LE,S24_32BE,U24_32LE,U24_32BE,S32LE,S32BE,U32LE,U32BE,S24LE,S24BE,U24LE,U24BE,S20LE,S20BE,U20LE,U20BE,S18LE,S18BE,U18LE,U18BE,F32LE,F32BE,F64LE,F64BE).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsDynamicOutputcudadec-memtypeSet to specify memory type for CUDA decoder buffers.Valid values:0: memtype_device1: memtype_pinned2: memtype_unifiedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0dec-skip-framesType of frames to skip during decoding.Valid values:0: decode_all1: decode_non_ref2: decode_keyFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0drop-frame-intervalInterval to drop the frames,ex: value of 5 means every 5th frame will be given by decoder, rest all dropped.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0file-loopLoop file sources after EOS. Src type must besource-type-urianduristarting with'file:/'.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsegpu-idSet GPU Device ID.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0latencyJitterbuffersize in milliseconds; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 100num-extra-surfacesNumber of surfaces in addition to minimum decode surfaces given by the decoder.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 1rtsp-reconnect-intervalTimeout in seconds to wait since last data was received from an RTSP source before forcing a reconnection.0= disable timeout.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0select-rtp-protocolTransport Protocol to use for RTP.Valid values:0: rtp-multi4: rtp-tcpFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0smart-rec-cacheSize of cache in seconds, applies to both audio and video cacheFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0smart-rec-containerContainer format of recorded video. MP4 and MKV containers are supported. Sources must be of typesource-type-rtsp.Valid values:0: smart-rec-mp41: smart-rec-mkvFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0smart-rec-default-durationIn case a Stop event is not generated. This parameter will ensure the recording is stopped after a predefined default duration.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 20smart-rec-dir-pathPath of directory to save the recorded file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEsmart-rec-file-prefixBy default,Smart_Recordis the prefix. For unique file names every source must be provided with a unique prefix.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGDefault: Smart_Recordsmart-rec-modeSmart record modeValid values:0: smart-rec-mode-av1: smart-rec-mode-video2: smart-rec-mode-audioFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0smart-rec-video-cacheSize of video cache in seconds. DEPRECATED: Use ‘smart-rec-cache’ insteadFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0smart-recordEnable Smart Record and choose the type of events to respond to. Sources must be of typesource-type-rtsp.Valid values:0: smart-rec-disable1: smart-rec-cloud2: smart-rec-multiFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0source-idUnique ID for the input source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1sr-done-signalHandle to aNvDsSrDoneSignalcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSrDoneSignalstart-sr-actionHandle to aNvDsStartSrActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStartSrActionstop-sr-actionHandle to aNvDsStopSrActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStopSrActiontypeSet the type of source. Usesource-type-rtspto use smart record features.Valid values:0: auto1: uri2: rtspFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0udp-buffer-sizeUDP Buffer Size in bytes; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64uriURI of the file orrtspsource.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGvideo-out-%uHandle to annvidia::deepstream::NvDsDynamicOutputcomponent. Supported formats -video(I420,NV12,P010_10LE,BGRx,RGBA,GRAY8).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsDynamicOutputnvidia::deepstream::NvDsSourceManipulationAction#Signals theNvDsMultiSrcInputcomponent to add or remove a source. This is a connector component. This component must be linked to another component which triggers the action and ‘NvDsMultiSrcInput’ component which performs the action.Component ID: e9147d15-9c4f-4cc5-982d-08449ec594d1Base Type: nvidia::deepstream::INvDsActionDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsMultiSourceSmartRecordAction#Signals theNvDsMultiSrcInputcomponent to start / stop smart recording on a particular source. This functionality is based on DeepStream Smart Recordhttps://docs.nvidia.com/metropolis/deepstream/dev-guide/text/DS_Smart_video.htmlComponent ID: ab36e218-340e-47b6-b876-d8a17480aabbBase Type: nvidia::deepstream::INvDsActionDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsMultiSrcInput#Multi-input source component. Takes a list of URIs as a parameter and creates multiple sources. AGstSrcpad is created for each source. Supports runtime addition and removal of sources. Supports DeepStream Smart Record DeepStream Smart Recordhttps://docs.nvidia.com/metropolis/deepstream/dev-guide/text/DS_Smart_video.html.Component ID: 8a59cfd7-1c69-4a80-9e41-2b9820029a98Base Type: nvidia::deepstream::INvDsElementParameters#audio-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputcudadec-memtypeSet to specify memory type for CUDA decoder buffers.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0dec-skip-framesType of frames to skip during decoding.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64drop-frame-intervalInterval to drop the frames,ex: value of 5 means every 5th frame will be given by decoder, rest all dropped.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64file-loopLoop file sources after EOS. Src type must besource-type-uriand uri starting withfile:/.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLgpu-idSet GPU Device ID.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64latencyJitterbuffersize in milliseconds; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64num-extra-surfacesNumber of surfaces in addition to minimum decode surfaces given by the decoder.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64peer-pad-id-same-as-source-idForce the downstream element’s request pad index to be same as the source-id of the source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsertsp-reconnect-intervalTimeout in seconds to wait since last data was received from an RTSP source before forcing a reconnection. 0=disable timeout.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64select-rtp-protocolTransport Protocol to use for RTPFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-cacheSize of cache in seconds, applies to both audio and video cacheFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0smart-rec-containerContainer format of recorded video. MP4 and MKV containers are supported. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-default-durationIn case a Stop event is not generated. This parameter will ensure the recording is stopped after a predefined default duration.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-rec-dir-pathPath of directory to save the recorded file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEsmart-rec-file-prefixBy default, Smart_Record is the prefix. For unique file names every source must be provided with a unique prefix.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsmart-rec-modeSmart record modeValid values:0: smart-rec-mode-av1: smart-rec-mode-video2: smart-rec-mode-audioFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-statusBoolean indicating if SR is currently.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLsmart-rec-video-cacheSize of video cache in seconds. DEPRECATED: Use ‘smart-rec-cache’ instead.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-recordEnable Smart Record and choose the type of events to respond to. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-record-actionHandle to annvidia::deepstream::NvDsMultiSourceSmartRecordActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiSourceSmartRecordActionsmart-record-done-signalHandle to annvidia::deepstream::NvDsSrDoneSignalcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSrDoneSignalsource-id-listSemi-colon separated list of unique IDs for the input source. Should have 1-to-1 mapping with uri-list.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsource-info-loaderHandle to annvidia::deepstream::NvDsSourceInfoLoadercomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceInfoLoadersource-manip-actionHandle to annvidia::deepstream::NvDsSourceManipulationActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceManipulationActiontypeSet the type of source. Usesource-type-rtspto use smart record features.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64udp-buffer-sizeUDP Buffer Size in bytes; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64uri-listSemi-colon separated list of URIs, Overrides the uri parameter ofGstDsNvUriSrcBin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGvideo-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponentFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputnvidia::deepstream::NvDsMultiSrcWarpedInput#ExtendsGstDsNvMultiUriSrcBincomponent to adddewarperafter the decoder.Component ID: 2e6da3fa-46fc-47b3-83fc-9310edc3c4edBase Type: nvidia::deepstream::NvDsMultiSrcInputParameters#audio-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputcudadec-memtypeSet to specify memory type for CUDA decoder buffers.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0dec-skip-framesType of frames to skip during decoding.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64dewarper-config-fileDewarperConfig File.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEdrop-frame-intervalInterval to drop the frames,ex: value of 5 means every 5th frame will be given by decoder, rest all dropped.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64file-loopLoop file sources after EOS. Src type must besource-type-uriand uri starting withfile:/.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLgpu-idSet GPU Device ID.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64interpolation-methodSet interpolation method for thedewarper.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64latencyJitterbuffersize in milliseconds; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64num-batch-buffersNumber of Surfaces per output Buffer.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64num-extra-surfacesNumber of surfaces in addition to minimum decode surfaces given by the decoder.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64num-output-buffersNumber of Output Buffers of thedewarper.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64peer-pad-id-same-as-source-idForce the downstream element’s request pad index to be same as the source-id of the source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsertsp-reconnect-intervalTimeout in seconds to wait since last data was received from an RTSP source before forcing a reconnection. 0=disable timeout.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64select-rtp-protocolTransport Protocol to use for RTPFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-cacheSize of cache in seconds, applies to both audio and video cache.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0smart-rec-containerContainer format of recorded video. MP4 and MKV containers are supported. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-default-durationIn case a Stop event is not generated. This parameter will ensure the recording is stopped after a predefined default duration.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-rec-dir-pathPath of directory to save the recorded file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEsmart-rec-file-prefixBy default, Smart_Record is the prefix. For unique file names every source must be provided with a unique prefix.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsmart-rec-modeSmart record modeValid values:0: smart-rec-mode-av1: smart-rec-mode-video2: smart-rec-mode-audioFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-statusBoolean indicating if SR is currently.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLsmart-rec-video-cacheSize of video cache in seconds. DEPRECATED: Use ‘smart-rec-cache’ instead.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-recordEnable Smart Record and choose the type of events to respond to. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-record-actionHandle to annvidia::deepstream::NvDsMultiSourceSmartRecordActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiSourceSmartRecordActionsmart-record-done-signalHandle to a nvidia::deepstream::NvDsSrDoneSignal componentFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSrDoneSignalsource-id-listSemi-colon separated list of unique IDs for the input source. Should have 1-to-1 mapping with uri-list.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsource-info-loaderHandle to annvidia::deepstream::NvDsSourceInfoLoadercomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceInfoLoadersource-manip-actionHandle to annvidia::deepstream::NvDsSourceManipulationActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceManipulationActiontypeSet the type of source. Usesource-type-rtspto use smart record features.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64udp-buffer-sizeUDP Buffer Size in bytes; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64uri-listSemi-colon separated list of URIs. Overrides the uri parameter ofGstDsNvUriSrcBin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGvideo-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputnvidia::deepstream::NvDsRecordAction#Signal theNvDsMultiSrcInputWithRecordcomponent to start/stop recording. This is a connector component. This component must be linked to another component which triggers the action andNvDsMultiSrcInputWithRecordcomponent which performs the action.Component ID: fd0851c0-405e-4198-94b1-46ceb0006f54Base Type: nvidia::deepstream::INvDsActionDefined in: nvdssource/nvdssource_signals.hppnvidia::deepstream::NvDsMultiSrcInputWithRecord#Multi source bin with custom record functionality.Component ID: a8231113-4517-40e7-9de3-87b551f8cc5bBase Type: nvidia::deepstream::NvDsMultiSrcInputParameters#audio-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputcudadec-memtypeSet to specify memory type for CUDA decoder buffers.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0dec-skip-framesType of frames to skip during decoding.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64drop-frame-intervalInterval to drop the frames,ex: value of 5 means every 5th frame will be given by decoder, rest all dropped.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64file-loopLoop file sources after EOS. Src type must besource-type-uriand uri starting withfile:/.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLgpu-idSet GPU Device ID.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64latencyJitterbuffersize in milliseconds; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64num-extra-surfacesNumber of surfaces in addition to minimum decode surfaces given by the decoder.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64peer-pad-id-same-as-source-idForce the downstream element’s request pad index to be same as the source-id of the source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsepre-event-rec-timePre-event record time.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0record-actionHandle to aNvDsRecordActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsRecordActionrecord-modeRecord Mode. 0 = no recording, 1 = video, 2 = snapshot.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0rtsp-reconnect-intervalTimeout in seconds to wait since last data was received from an RTSP source before forcing a reconnection. 0=disable timeout.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64select-rtp-protocolTransport Protocol to use for RTP.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-cacheSize of cache in seconds, applies to both audio and video cacheFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0smart-rec-containerContainer format of recorded video. MP4 and MKV containers are supported. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-default-durationIn case a Stop event is not generated. This parameter will ensure the recording is stopped after a predefined default duration.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-rec-dir-pathPath of directory to save the recorded file.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FILEsmart-rec-file-prefixBy default,Smart_Recordis the prefix. For unique file names every source must be provided with a unique prefix.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsmart-rec-modeSmart record modeValid values:0: smart-rec-mode-av1: smart-rec-mode-video2: smart-rec-mode-audioFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64smart-rec-statusBoolean indicating if SR is currently.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLsmart-rec-video-cacheSize of video cache in seconds. DEPRECATED: Use ‘smart-rec-cache’ instead.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64smart-recordEnable Smart Record and choose the type of events to respond to. Sources must be of typesource-type-rtsp.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64source-id-listSemi-colon separated list of unique IDs for the input source. Should have 1-to-1 mapping with uri-list.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGsource-info-loaderHandle to annvidia::deepstream::NvDsSourceInfoLoadercomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceInfoLoadersource-manip-actionHandle to annvidia::deepstream::NvDsSourceManipulationActioncomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsSourceManipulationActiontypeSet the type of source. Usesource-type-rtspto use smart record features.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64udp-buffer-sizeUDP Buffer Size in bytes; applicable only for RTSP streams.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64uri-listSemi-colon separated list of URIs. Overrides the uri parameter ofGstDsNvUriSrcBin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGvideo-%u-outHandle to annvidia::deepstream::NvDsMultiOutputcomponent.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsMultiOutputnvidia::deepstream::NvDsCameraSrcInput#Nvidia DeepStreamSDKNvCameraSrcBin.Component ID: 3ab02c2f-b2ef-3a55-85e1-f7aebb552393Base Type: nvidia::deepstream::INvDsElementParameters#framerateFrame rate to request from the sourceFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 30gpu-idSet GPU Device ID for operation.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0heightFrame height to request from the source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 480nvbuf-memory-typeType ofNvBufSurfaceMemory to be allocated for output buffers.Valid values:0: nvbuf-mem-default1: nvbuf-mem-cuda-pinned2: nvbuf-mem-cuda-device3: nvbuf-mem-cuda-unifiedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0sensor-idSet the id of camera sensor to use.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0source-idUnique ID for the input source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1typeType of interface to use.Valid values:0: v4l21: nvargusFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0v4l2-deviceV4L2 capture device.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGDefault: /dev/video0video-outHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -video(I420,NV12,P010_10LE,BGRx,RGBA,GRAY8).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputwidthFrame width to request from the source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 640nvidia::deepstream::VideoTestSrc#Creates a test video stream.
Refer tonvvideotestsrc pluginComponent ID: b99f0737-f4d6-3cb1-b994-952f7cab140aBase Type: nvidia::deepstream::INvDsElementParameters#animation-modeForpattern=ball, which counter defines the position of the ball.Valid values:0: frames1: wall-time2: running-timeFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0background-colorBackground color to use (big-endian ARGB).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 4278190080blocksizeSize in bytes to read per buffer (-1 = default).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 4096do-timestampApply current stream time to buffers.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalseflipForpattern=ball, invert colors every second.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseforeground-colorForeground color to use (big-endian ARGB).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 4294967295horizontal-speedScroll image number of pixels per frame (positive is scroll to the left).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0is-liveAct as a live source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsek0Zoneplatezero order phase, for generating plain fields or phase offsets.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0ktZoneplate1st order t phase, for generating phase rotation as a function of time.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kt2Zoneplate2nd order t phase,t*t/256cycles per picture.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kxZoneplate1st order x phase, for generating constant horizontal frequencies.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kx2Zoneplate2nd order x phase, normalized tokx2/256cycles per horizontal pixel at width/2 from origin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kxtZoneplatex*t product phase, normalized tokxy/256cycles per vertical pixel at width/2 from origin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kxyZoneplatex*yproduct phase.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kyZoneplate1st order y phase, for generating constant vertical frequencies.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0ky2Zoneplate2nd order y phase, normalized toky2/256cycles per vertical pixel atheight/2from origin.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0kytZoneplatey*tproduct phase.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0motionForpattern=ball, determines the motion of the ball.Valid values:0: wavy1: sweep2: hsweepFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0num-buffersNumber of buffers to output before sending EOS (-1 = unlimited).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1patternType of test pattern to generate.Valid values:0: smpte1: snow2: black3: white4: red5: green6: blue7: checkers-18: checkers-29: checkers-410: checkers-811: circular12: blink13: smpte7514: zone-plate15: gamut16: chroma-zone-plate17: solid-color18: ball19: smpte10020: bar21: pinwheel22: spokes23: gradient24: colorsFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0timestamp-offsetAn offset added to timestamps set on buffers (in ns).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0typefindRuntypefindbefore negotiating (deprecated, non-functional).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsevideo-outHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -video(I420,YV12,YUY2,UYVY,AYUV,VUYA,RGBx,BGRx,xRGB,xBGR,RGBA,BGRA,ARGB,ABGR,RGB,BGR,Y41B,Y42B,YVYU,Y444,v210,v216,Y210,Y410,NV12,NV21,GRAY8,GRAY16_BE,GRAY16_LE,v308,RGB16,BGR16,RGB15,BGR15,UYVP,A420,RGB8P,YUV9,YVU9,IYU1,ARGB64,AYUV64,r210,I420_10BE,I420_10LE,I422_10BE,I422_10LE,Y444_10BE,Y444_10LE,GBR,GBR_10BE,GBR_10LE,NV16,NV24,NV12_64Z32,A420_10BE,A420_10LE,A422_10BE,A422_10LE,A444_10BE,A444_10LE,NV61,P010_10BE,P010_10LE,IYU2,VYUY,GBRA,GBRA_10BE,GBRA_10LE,BGR10A2_LE,GBR_12BE,GBR_12LE,GBRA_12BE,GBRA_12LE,I420_12BE,I420_12LE,I422_12BE,I422_12LE,Y444_12BE,Y444_12LE,GRAY10_LE32,NV12_10LE32,NV16_10LE32,NV12_10LE40,bayer).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputxoffsetZoneplate2nd order products x offset.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0yoffsetZoneplate2nd order products y offset.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0nvidia::deepstream::AudioTestSrc#Creates audio test signals of given frequency and volume.Component ID: b8992fc1-c964-3c56-8441-df6dfd8dbc64Base Type: nvidia::deepstream::INvDsElementParameters#apply-tick-rampApply ramp to tick samples.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falseaudio-outHandle to annvidia::deepstream::NvDsStaticOutputcomponent. Supported formats -audio(S16LE,S16BE,U16LE,U16BE,S24_32LE,S24_32BE,U24_32LE,U24_32BE,S32LE,S32BE,U32LE,U32BE,S24LE,S24BE,U24LE,U24BE,S20LE,S20BE,U20LE,U20BE,S18LE,S18BE,U18LE,U18BE,F32LE,F32BE,F64LE,F64BE,S8,U8).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputblocksizeSize in bytes to read per buffer (-1 = default).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 4294967295can-activate-pullCan activate in pull mode.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsecan-activate-pushCan activate in push mode.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Truedo-timestampApply current stream time to buffers.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalsefreqFrequency of test signal. The sample rate needs to be at least 4 times higher.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FLOAT64Default: 440.0is-liveAct as a live source.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falsemarker-tick-periodMake every Nth tick a marker tick (= a tick with different volume). Only used ifwave=ticks.0= no marker ticks.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0marker-tick-volumeVolume of marker ticks. Only used ifwave=ticksandmarker-tick-periodis set to a nonzero value.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FLOAT64Default: 1.0num-buffersNumber of buffers to output before sending EOS (-1 = unlimited).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1samplesperbufferNumber of samples in each outgoing buffer.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 1024sine-periods-per-tickNumber of sine wave periods in one tick. Only used ifwave=ticks.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 10tick-intervalDistance between start of current and start of next tick, in nanoseconds.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 1000000000timestamp-offsetAn offset added to timestamps set on buffers (in ns).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0typefindRuntypefindbefore negotiating (deprecated, non-functional).Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalsevolumeVolume of test signal.Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_FLOAT64Default: 0.8waveOscillator waveform.Valid values:0: sine1: square2: saw3: triangle4: silence5: white-noise6: pink-noise7: sine-table8: ticks9: gaussian-noise10: red-noise11: blue-noise12: violet-noiseFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 0nvidia::deepstream::AlsaAudioInput#Read from a sound card via ALSAComponent ID: ee5f60b1-85a2-3d5b-bf3e-a1ce8b66dde9Base Type: nvidia::deepstream::INvDsElementParameters#audio-outHandle to a nvidia::deepstream::NvDsStaticOutput component. Supported formats - audio(S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputblocksizeSize in bytes to read per buffer (-1 = default)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64Default: 0buffer-timeSize of audio buffer in microseconds. This is the maximum amount of data that is buffered in the device and the maximum latency that the source reports. This value might be ignored by the element if necessary; see “actual-buffer-time”Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 200000deviceALSA device, as defined in an asound configuration fileFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGDefault: defaultdo-timestampApply current stream time to buffersFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Falselatency-timeThe minimum amount of data to read in each iteration in microseconds. This is the minimum latency that the source reports. This value might be ignored by the element if necessary; see “actual-latency-time”Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 10000num-buffersNumber of buffers to output before sending EOS (-1 = unlimited)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: -1provide-clockProvide a clock to be used as the global pipeline clockFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: Trueslave-methodAlgorithm used to match the rate of the masterclockValid values:0: resample1: re-timestamp2: skew3: noneFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64Default: 2typefindRun typefind before negotiating (deprecated, non-functional)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLDefault: FalsepreviousNvDsSampleModelsExtnextNvDsTemplateExtOn this pageComponentsnvidia::deepstream::NvDsSourceInfoLoaderParametersnvidia::deepstream::NvDsStartSrActionnvidia::deepstream::NvDsStopSrActionnvidia::deepstream::NvDsSrDoneSignalnvidia::deepstream::NvDsSingleSrcInputParametersnvidia::deepstream::NvDsSourceManipulationActionnvidia::deepstream::NvDsMultiSourceSmartRecordActionnvidia::deepstream::NvDsMultiSrcInputParametersnvidia::deepstream::NvDsMultiSrcWarpedInputParametersnvidia::deepstream::NvDsRecordActionnvidia::deepstream::NvDsMultiSrcInputWithRecordParametersnvidia::deepstream::NvDsCameraSrcInputParametersnvidia::deepstream::VideoTestSrcParametersnvidia::deepstream::AudioTestSrcParametersnvidia::deepstream::AlsaAudioInputParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.