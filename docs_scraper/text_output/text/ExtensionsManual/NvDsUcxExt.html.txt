NvDsUcxExt â€” DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsNvDsUcxExtNvDsUcxExt#NVIDIA DeepStream extension for sending/receiving data over UCX.
Refer tonvdsucx pluginUUID: 4ee6215d-cb14-41e8-a266-5c45f4f9ffd4Version: 0.6.0Author: NVIDIALicense: ProprietaryComponents#nvidia::deepstream::NvDsUcxClientSink#Send data as a client over the network via UCXComponent ID: fc770702-38c5-37a8-8ebb-24dd8ca035d3Base Type: nvidia::deepstream::INvDsElementParameters#syncSync on the clockFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLmax-latenessMaximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64qosGenerate Quality-of-Service events upstreamFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLasyncGo asynchronously to PAUSEDFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLaddrThe IP address to listen onFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGportThe port to listen to (default = 7174)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_INT64buf-typeType of data to be handled by UCX - Video/Audio/TextValid values:0: nvdsucx-buf-video1: nvdsucx-buf-nv-audio2: nvdsucx-buf-raw-audio4: nvdsucx-buf-textFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64inHandle to anvidia::deepstream::NvDsStaticInputcomponent. Supported formats - video(NV12, RGBA, I420);audio(S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputnvidia::deepstream::NvDsUcxClientSrc#Receive data as a client over the network via UCXComponent ID: 6d81f6cd-c324-353b-984d-f504c6b58b3cBase Type: nvidia::deepstream::INvDsElementParameters#addrThe IP address to connect toFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGportThe port to connect to (default = 7174)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_INT64buf-typeType of data to be handled by UCX - Video/Audio/TextValid values:0: nvdsucx-buf-video1: nvdsucx-buf-nv-audio2: nvdsucx-buf-raw-audio4: nvdsucx-buf-textFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64gpu-idSet GPU Device ID for operationFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64nvbuf-memory-typeType of NvBufSurface Memory to be allocated for output buffersValid values:0: nvbuf-mem-default1: nvbuf-mem-cuda-pinned2: nvbuf-mem-cuda-device3: nvbuf-mem-cuda-unifiedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64num-nvbufThe number of NV buffers to allocate. 0 is unlimitedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64nvbuf-batch-sizeThe maximal batch size of a NV bufferFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64raw-buf-sizeraw buffer sizeFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64outHandle to anvidia::deepstream::NvDsStaticOutputcomponent. Supported formats - video(NV12, RGBA, I420);audio(S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputnvidia::deepstream::NvDsUcxServerSink#Send data as a server over the network via UCXComponent ID: 73415b33-57c0-30e0-a7b3-f66428c640abBase Type: nvidia::deepstream::INvDsElementParameters#syncSync on the clockFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLmax-latenessMaximum number of nanoseconds that a buffer can be late before it is dropped (-1 unlimited)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64qosGenerate Quality-of-Service events upstreamFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLasyncGo asynchronously to PAUSEDFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_BOOLthrottle-timeThe time to keep between rendered buffers (0 = disabled)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64addrThe IP address to listen onFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGportThe port to listen to (default = 7174)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_INT64buf-typeType of data to be handled by UCX - Video/Audio/TextValid values:0: nvdsucx-buf-video1: nvdsucx-buf-nv-audio2: nvdsucx-buf-raw-audio4: nvdsucx-buf-textFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64num-connsThe number of connections to handle from clientsFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64inHandle to anvidia::deepstream::NvDsStaticInputcomponent. Supported formats - video(NV12, RGBA, I420);audio(S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticInputnvidia::deepstream::NvDsUcxServerSrc#Receive data as a server over the network via UCXComponent ID: ba85f498-a53d-35ba-881e-d9ffb20005d9Base Type: nvidia::deepstream::INvDsElementParameters#addrThe IP address to connect toFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_STRINGportThe port to connect to (default = 7174)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_INT64buf-typeType of data to be handled by UCX - Video/Audio/TextValid values:0: nvdsucx-buf-video1: nvdsucx-buf-nv-audio2: nvdsucx-buf-raw-audio4: nvdsucx-buf-textFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64gpu-idSet GPU Device ID for operationFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64nvbuf-memory-typeType of NvBufSurface Memory to be allocated for output buffersValid values:0: nvbuf-mem-default1: nvbuf-mem-cuda-pinned2: nvbuf-mem-cuda-device3: nvbuf-mem-cuda-unifiedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64num-nvbufThe number of NV buffers to allocate. 0 is unlimitedFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64nvbuf-batch-sizeThe maximal batch size of a NV bufferFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_INT64raw-buf-sizeraw buffer sizeFlags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_UINT64outHandle to anvidia::deepstream::NvDsStaticOutputcomponent. Supported formats - video(NV12, RGBA, I420);audio(S8, U8, S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE)Flags: GXF_PARAMETER_FLAGS_OPTIONALType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::deepstream::NvDsStaticOutputpreviousNvDsTritonExtnextNvDsUdpExtOn this pageComponentsnvidia::deepstream::NvDsUcxClientSinkParametersnvidia::deepstream::NvDsUcxClientSrcParametersnvidia::deepstream::NvDsUcxServerSinkParametersnvidia::deepstream::NvDsUcxServerSrcParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright Â© 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.