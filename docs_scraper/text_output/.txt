NVIDIA DeepStream SDK Developer Guide — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formNVIDIA DeepStream SDK Developer Guide#DeepStream Getting StartedWelcome to the DeepStream DocumentationNVIDIA DeepStream OverviewMigration GuideAdditional ResourcesInstallationJetson SetupdGPU Setup for UbuntuIGX/dGPU on ARM Setup for Ubuntu (Alpha)dGPU on ARM Setup for Ubuntu (Alpha)dGPU Setup for RedHat Enterprise Linux (RHEL)Platform and OS CompatibilityQuickstart GuideJetson [Not applicable for NVAIE customers]dGPU for UbuntuHow to visualize the output if the display is not attached to the systemDeepStream Triton Inference Server Usage GuidelinesUsing DLA for inferenceDocker ContainersPrerequisitesA Docker Container for dGPUA Docker Container for JetsonA Docker Container for dGPU on ARM (IGX/dGPU, GH100, GH200, SBSA)Creating custom DeepStream dockers for dGPU or Jetson using DeepStreamSDK packageRecommended Minimal L4T Setup necessary to run the new docker images on JetsonDeepStream SamplesC/C++ Sample Apps Source DetailsPlugin and Library Source DetailsPython Sample Apps and Bindings Source DetailsSample Application Source DetailsPython Bindings and Application DevelopmentMetaData AccessDeepStream Reference Application - deepstream-appApplication ArchitectureReference Application ConfigurationConfiguration GroupsApplication Tuning for DeepStream SDKDeepStream Reference Application - deepstream-test5 appIoT Protocols supported and cloud configurationMessage consumerSmart Record - Event based recordingOTA model updateSensor Provisioning Support over REST API (Runtime sensor add/remove capability)DeepStream Reference Application - deepstream-nmos appApplication ArchitectureUsing Easy-NMOS for NMOS Registry and ControllerDeepStream Reference Application on GitHubUse case applicationsAI models with DeepStreamDeepStream features sampleSample Configurations and StreamsContents of the packageImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleDescription of the Sample Plugin: gst-dsexampleEnabling and configuring the sample pluginUsing the sample plugin in a custom application/pipelineImplementing Custom Logic Within the Sample PluginAdding NVTX APIs for sample pluginAccessing NvBufSurface memory in OpenCVTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamPre-trained modelsTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDS3D Application ExamplesDS3D data formatds3d/datamapds3d::dataloader- Load Custom Lib for Data Captureds3d::databridge- Loads Custom Lib for data conversion to and from DS3D.ds3d::datafilter-  DS3D Custom DataFilterds3d::datarender- Loads DS3D Custom DataRenderCustom Libs Configuration SpecificationsDeepStream PerformancePerformanceTAO Pre-trained modelsDeepStream reference model and trackerConfiguration File Settings for Performance MeasurementDeepStream reference modelDeepStream AccuracyAccuracy Tuning ToolsPipeTuner for Automatic Tuning (Developer Preview)Multi-Object Tracking Parameter Functionalities for Manual TuningDeepStream Custom ModelUsing a Custom Model with DeepStreamCustom Model Implementation InterfaceCustom Output ParsingIPlugin ImplementationInput Layer InitializationCUDA Engine Creation for Custom ModelsIModelParser Interface for Custom Model ParsingDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkExample 1. BEVFusion Multi-Modal with 6-Camera Plus 1-LiDAR Data Fusion PipelineExample 2. V2XFusion multi-modal batched 4-Camera and 4-LiDAR Inference Pipeline:Quick StartBuild application From SourceDS3D Components used in this sample applicationDS3D Custom Components Configuration SpecificationsDeepStream-3D Multi-Modal BEVFusion SetupPrerequisitesGetting StartedPrepare DeepStream Triton BEVFusion Container and Models on X86 with a dGPUUsage:IoT Messaging:Build from source:NuScenes Dataset Setup for DS3D BEVFusion PipelineDataset Generation for DS3D BEVFusionHow to use other nuScenes scene samples:CitationDeepStream-3D Multi-Modal V2XFusion SetupPrerequisitesGetting StartedBuild from source:Smart Video RecordSmart Video Record Module APIsSmart Video Record ConfigurationsIoTSecure Edge-to-Cloud MessagingBidirectional MessagingAutoreconnect featureOn the Fly Model UpdateAssumptionsNTP Timestamp in DeepStreamAV Sync in DeepStreamSetup for RTMP/RTSP Input streams for testingAVSync Reference PipelinesDeepStream With REST API SeverFeaturesnvds_rest_serverdeepstream-server-appSensor provisioning with deepstream-test5-appHow to add custom REST API supportSchema and endpointsLimitationsDeepStream 3D Action Recognition AppGetting StartedDeepStream 3D Action Recognition App Configuration SpecificationsBuild Custom sequence preprocess lib and application From SourceDeepStream 3D Depth Camera AppPrerequisitesDepth Color Capture to 2D Rendering Pipeline OverviewDepth Color Capture to 3D Point Cloud Processing and RenderingGetting StartedRun 3D Depth Capture, Point Cloud filter, and 3D Points Rendering ExamplesDeepStream 3D Depth Camera App Configuration SpecificationsDeepStream 3D Lidar Inference AppPrerequisitesLidar Point Cloud to 3D Point Cloud Processing and RenderingGetting StartedNetworked Media Open Specifications (NMOS) in DeepStreamSupported SpecificationsPrerequisitesNvDsNmos APISample ApplicationGst-nvdspostprocess in DeepStreamDetector modelsPrimary Classification modelMask RCNN ModelCustom Parsing functionsDeepStream Can Orientation AppGetting StartedDeepStream Can Orientation App Configuration SpecificationsBuild application From SourceDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0Running DeepStream 7.0 compiled Apps in DeepStream 7.1Compiling DeepStream 7.0 Apps in DeepStream 7.1Migrating DeepStream 7.0 Gst-nvtracker to DeepStream 7.1Plugins Development Guide#DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKNvDsBatchMeta: Basic Metadata StructureUser/Custom Metadata Addition inside NvDsBatchMetaAdding Custom Meta in Gst Plugins Upstream from Gst-nvstreammuxAdding metadata to the plugin before Gst-nvstreammuxNew metadata fieldsGst-nvdspreprocess (Alpha)Inputs and OutputsFeaturesCustom library InterfacesGst-nvdspreprocess File Configuration SpecificationsGst PropertiesSample pipelinesGst-nvinferInputs and OutputsFeaturesGst-nvinfer File Configuration SpecificationsGst PropertiesClustering algorithms supported by nvinfercluster-mode = 0 | GroupRectanglescluster-mode = 1 | DBSCANcluster-mode = 2 | NMScluster-mode = 3 | Hybridcluster-mode=4 | No clusteringTensor MetadataTo read or parse inference raw tensor data of output layersSegmentation MetadataGst-nvinferserverInputs and OutputsGst-nvinferserver Configuration File SpecificationsFeaturesLow Levellibnvds_infer_server.soConfiguration File SpecificationsGst PropertiesDeepStream Triton samplesDeepStream Triton gRPC supportTriton Ensemble ModelsCustom Process interfaceIInferCustomProcessorfor Extra Input, LSTM Loop, Output Tensor PostprocessTensor Metadata Output for Downstream PluginsTo read or parse inference raw tensor data of output layersSegmentation MetadataGst-nvtrackerSub-batching (Alpha)Inputs and OutputsGst PropertiesNvDsTracker API for Low-Level Tracker LibraryNvMultiObjectTracker: A Reference Low-Level Tracker LibraryUnified Tracker Architecture for Composable Multi-Object TrackerWorkflow and Core Modules in TheNvMultiObjectTrackerLibraryData AssociationTarget Management and Error HandlingState EstimationObject Re-IdentificationTarget Re-AssociationBounding-box UnclippingSingle-View 3D Tracking (Alpha)Configuration ParametersLow-Level Tracker Comparisons and TradeoffsIOU TrackerNvSORT TrackerNvDeepSORT TrackerData AssociationConfiguration ParametersImplementation Details and ReferenceNvDCF TrackerVisual TrackingData AssociationConfiguration ParametersMiscellaneous Data OutputTerminated Track ListShadow Tracking Target DataPast-frame Target DataSetup and Usage of Re-ID ModelSetup Sample Re-ID ModelsCustomize Re-ID ModelRe-ID Feature OutputSetup and Usage of Sub-batching (Alpha)Use-case 1Use-case 2Setup and Visualization of Tracker Sample PipelinesPeople TrackingVehicle TrackingTracker Accuracy TuningHow to Implement a Custom Low-Level Tracker LibraryGst-nvstreammuxInputs and OutputsFeaturesGst PropertiesKnown Issues with Solutions and FAQ1. gst-inspect is not updated properly when switching between legacy and new streammuxGst-nvstreammux NewInputs and OutputsFeaturesGst PropertiesMux Config PropertiesNvStreamMux Tuning Solutions for specific use casesAimImportant Tuning parametersVideo and Audio muxing Use casesTroubleshootingMetadata propagation through nvstreammux and nvstreamdemuxCascaded MuxingKnown Issues with Solutions and FAQObserving video and/or audio stutter (low framerate)Sink plugin shall not move asynchronously to PAUSEDHeterogeneous batchingAdaptive BatchingOptimizing nvstreammux config for low-latency vs ComputeLatency Measurement API Usage guide for audiogst-inspect is not updated properly when switching between legacy and new streammuxGst-nvstreamdemuxInputs and OutputsUse case 1Use case 2Use case 3Gst-nvmultistreamtilerInputs and OutputsFeaturesGst PropertiesGst-nvdsosdInputs and OutputsFeaturesGst PropertiesGst-nvdsmetautilsGst-nvdsmetainsertInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesUse Cases & Sample PipelinesGst-nvdsmetaextractInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesUse Cases & Sample PipelinesGst-nvdsvideotemplateInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesSample pipelinesGst-nvdsaudiotemplateInputs and OutputsFeaturescustomlib_impl InterfacesGst PropertiesSample pipelinesGst-nvvideoconvertInputs and OutputsFeaturesGst PropertiesGst-nvdewarperInputs and OutputsFeaturesConfiguration File ParametersGst PropertiesGst-nvofInputs and OutputsFeaturesGst PropertiesGst-nvofvisualInputs and OutputsFeaturesGst PropertiesGst-nvsegvisualInputs and OutputsFeaturesGst PropertiesGst-nvvideo4linux2DecoderInputs and OutputsFeaturesGst PropertiesEncoderInputs and OutputsFeaturesGst PropertiesGst-nvjpegdecInputs and OutputsFeaturesGst PropertiesGst-nvimagedecInputs and OutputsFeaturesGst PropertiesGst-nvjpegencInputs and OutputsFeaturesGst PropertiesGst-nvimageencInputs and OutputsFeaturesGst PropertiesGst-nvmsgconvInputs and OutputsFeaturesGst PropertiesNvMsgConv low level library API’sSchema CustomizationPayload with Custom ObjectsGst-nvmsgbrokerInputs and OutputsFeaturesGst Propertiesnvds_msgapi: Protocol Adapter Interfacenvds_msgapi_connect(): Create a Connectionnvds_msgapi_send() and nvds_msgapi_send_async(): Send an eventnvds_msgapi_subscribe(): Consume data by subscribing to topicsnvds_msgapi_do_work(): Incremental Execution of Adapter Logicnvds_msgapi_disconnect(): Terminate a Connectionnvds_msgapi_getversion(): Get Version Numbernvds_msgapi_get_protocol_name(): Get name of the protocolnvds_msgapi_connection_signature(): Get Connection signaturenvds_kafka_proto: Kafka Protocol AdapterInstalling DependenciesUsing the AdapterConfiguring Protocol SettingsProgrammatic IntegrationSecurity for KafkaAzure MQTT Protocol Adapter LibrariesInstalling DependenciesSetting Up Azure IoTConfiguring Adapter SettingsUsing the AdapterMonitor Adapter ExecutionMessage Topics and RoutesAMQP Protocol AdapterInstalling DependenciesAMQP brokerConfigure Adapter SettingsUsing the AdapterUser authenticationProgrammatic IntegrationMonitor Adapter ExecutionREDIS Protocol AdapterInstalling DependenciesREDIS serverConfigure Adapter SettingsUser AuthenticationUsing the AdapterProgrammatic IntegrationMonitor Adapter ExecutionMQTT Protocol AdapterInstalling DependenciesEclipse MosquittoConfigure Adapter SettingsUsing the AdapterProgrammatic IntegrationMonitor Adapter Executionnv_msgbroker: Message Broker interfacenv_msgbroker_connect(): Create a Connectionnv_msgbroker_send_async(): Send an event asynchronouslynv_msgbroker_subscribe(): Consume data by subscribing to topicsnv_msgbroker_disconnect(): Terminate a Connectionnv_msgbroker_version(): Get Version NumberAutoreconnect featureWork-interval configurationnvds_logger: Logging FrameworkGst-nvdsanalyticsInputs and OutputsFeaturesGst PropertiesConfiguration File ParametersGst-nvdsudpsrcInputs and OutputsFeaturesGst PropertiesExample pipelinesGst-nvdsudpsinkInputs and OutputsFeaturesGst PropertiesExample pipelinesGst-nvdspostprocess (Alpha)Inputs and OutputsFeaturesGst-nvdspostprocess File Configuration SpecificationsGst PropertiesSample pipelinesGst-nvds3dfilterCustom library InterfacesInputs and OutputsConfiguration fileGst-nvds3dfilter properties SpecificationsSupported DS3D filter custom libsCustomds3d::datafilterlibrary:libnvds_3d_alignment_datafilter.soInputs and OutputsConfiguration fileConfiguration optionsCustomds3d::datafilterlibrary:libnvds_3d_depth2point_datafilter.soGst-nvds3dbridgeGst-nvds3dbridge properties SpecificationsCustom library InterfacesSupported DS3D Data bridgesCustom low level library:libnvds_3d_video_databridge.soInputs and OutputsConfiguration fileVideo bridge configuration optionsGst-nvds3dmixerGst-nvds3dmixer properties SpecificationsCustom library InterfacesSupported DS3D Data mixersCustom low level library:libnvds_3d_multisensor_mixer.soInputs and OutputsConfiguration fileVideo mixer configuration optionsGst-NvDsUcxDescriptionRequirementsInputs and OutputsGst PropertiesExamplesGst-nvdsxferInputs and OutputsGst PropertiesHow to testUse casesSingle Stream + Multi-dGPUs SetupMultiple Streams + Multi-dGPU SetupGst-nvvideotestsrcOutputsGst PropertiesHow to testGst-nvmultiurisrcbin1. Introduction2. Features3. How to use nvmultiurisrcbin in a pipelineREST API payload definitions and sample curl commands for reference4. Gst PropertiesGst Properties directly configuring nvmultiurisrcbinGst Properties to configure each instance of nvurisrcbin created inside this binGst Properties to configure the instance of nvstreammux created inside this bin5. Important Notesnvmultiurisrcbin config recommendations and notes on expected behavior6. LimitationsGst-nvurisrcbin1. Introduction2. How to use nvurisrcbin in a pipeline3. Gst Properties3.1 Gst Properties to configure nvurisrcbinTroubleshooting and FAQ Guide#DeepStream Troubleshooting and FAQTroubleshootingYou are migrating from DeepStream 6.0 to DeepStream 7.1InferencePerformanceTritonTroubleshooting in Tracker Setup and Parameter TuningGraph Composer TroubleshootingMiscellaneousFrequently Asked QuestionsDeepStream General topicsSmart RecordTritonDeepstream Setup On WSL2#DeepStream On WSL2DeepStream On WSLPre-Requisites:Install Ubuntu OS for WSL :Install Docker Engine And Dependencies Inside Ubuntu:Run Deepstream Container:FAQ for Deepstream On WSL1. Do we need to install nvidia driver inside Ubuntu Image with WSL?2. While installing driver, should you choose ‘Clean Installation’?3. While starting docker, I face error:“docker: Error response from daemon: could not select device driver “” with capabilities: [[gpu]]. What should I do?4. While starting docker, I get error “GPU access blocked by operating system”. What should I do?5. While installing Ubuntu image for WSL2, I get error: “The service cannot be started, either because it is disabled or because it has no enabled devices associated with it”. What should I do?6. While running deepstream-app for the first time, I get an error: “GLib (gthread-posix.c): Unexpected error from C library during ‘pthread_setspecific’: Invalid argument.  Aborting.”. What should I do?7. There is no video on the screen while running gstreamer or deepstream video pipelines. But pipeline seems to be running in terminal without any error. What is the reason?8. Warning prints are coming while running deepstream-app for first time after starting docker. For e.g: “deepstream-app –version” shows below warnings. Is that an issue?DeepStream API Reference Documentation#DeepStream API GuideDeepStream API GuidesNvidia Deepstream Service Maker#DeepStream Service MakerWhat is Deepstream Service MakerOverviewKey FeaturesService Maker for C/C++ DevelopersGetting Started with Service Maker C++ APIsApplication Developer FundamentalsSample ApplicationsMigrating Traditional Deepstream Apps to Service MakerService Maker for Python Developers(alpha)Python Service Maker InstallationWhat is a Deepstream Service Maker PluginGetting Started with Your Factory and PluginIncorporating properties to a pluginSample PluginsMessage Metadata GeneratorKITTI Dump PluginFramerate Measurement PluginLatency Measurement PluginSample Video Probe PluginSample Signal Handler PluginSample Video Feeder PluginSample Video Receiver PluginSmart Recording Action PluginSmart Recording Signal PluginPlugin Search PathDeepstream Libraries#Deepstream LibrariesDeepStream Libraries (Developer Preview)DeepStream Libraries InstallationDeepStream Libraries Repository SetupGetting Started with DeepStream Libraries APIsSample ApplicationsAdditional References and ApplicationsApplication Development Using Graph Composer#Graph ComposerOverviewConceptsGXF (Graph eXecution Format)GraphNodeComponentsCodeletsSubgraphSystemEdges / ConnectionMessagesExtensionGraph eXecution Engine (GXE)ToolsGraph ComposerRegistryContainer BuilderGXF ServerGXF CLIWorkflowPlatformsSupported platformsUbuntu 22.04 LTS (x86_64)Ubuntu 22.04 LTS (ARM64 Jetson)Windows 10 (x86_64)WSL Ubuntu 22.04 LTS (x86_64)Getting StartedApplication Development WorkflowPython Application DevelopmentPython API SetupComputeEntityPyComputeEntityTensor zero-copy with other frameworksFrom other frameworks to GXFFrom GXF to other frameworksExample ApplicationUCX Transmit / ReceiveGraph with UCX TxGraph with UCX RxUCXSource, UCXSink, and context implementation for referenceC++ Application DevelopmentGraph EntitySegmentConnecting Graph EntitiesApplicationRuntime Codelet RegistrationDistributed ApplicationcreateSegment()connect()Graph ComposerLaunch Graph ComposerSync ExtensionsCreate a GraphRun Graph from Graph ComposerLocal SystemRemote SystemRun Graph from Command lineCreate Container Image from Graph ComposerLocal SystemRemote System (Windows)DeepStream ApplicationCreating an AI ApplicationLaunch ComposerDrag and Drop ComponentsConfigure ComponentsConnect ComponentsAdd GStreamer SchedulerCount Number Of PeopleSave GraphUse Multiple inputsRuntime add/remove inputsReference graphsInstalling the reference graphsdeepstream-test1deepstream-test2deepstream-test3deepstream-test4deepstream-test5deepstream-runtime-src-add-deldeepstream-template-plugindeepstream-appdeepstream-tritondeepstream-cameradeepstream-action-recognitiondeepstream-subgraphdeepstream-3d-cameradeepstream-ucx-test1deepstream-ucx-test2Extension Development WorkflowSync ExtensionsDevelop New ExtensionCreate and test graphDeveloping Extensions for DeepStreamExtension and component factory registration boilerplateA simple DeepStream componentImplementation of INvDsInPlaceDataHandlerControlling PropertiesTriggering ActionsHandling signal callbacksImplementation of an Configuration Provider componentDeepStream ComponentsInterfacesData ComponentsBasic ComponentsConnectionsProbesGXF InternalsGXF InternalsLifeCycle of a CodeletThe GXF SchedulerGreedy SchedulerGreedy Scheduler ConfigurationMultithread SchedulerMultithread Scheduler ConfigurationEvent Based SchedulerMessaging and EventsEvent Based Scheduler ConfigurationEpoch SchedulerSchedulingTermsPeriodicSchedulingTermCountSchedulingTermMessageAvailableSchedulingTermMultiMessageAvailableSchedulingTermBooleanSchedulingTermAsynchronousSchedulingTermDownstreamReceptiveSchedulingTermTargetTimeSchedulingTermExpiringMessageAvailableSchedulingTermMessageAvailableFrequencyThrottlerMemoryAvailableSchedulingTermBTSchedulingTermCombining SchedulingTermsCuda based scheduling termsCuda Stream SchedulingTermCuda Event SchedulingTermConnection TopologiesMessagesTransmitterReceiverTransmitter ExampleReceiver ExampleMemory ManagementCuda Stream Order AllocatorRMM: RAPIDS Memory ManagerDistributed ExecutionGraphWorkerGraphDriverLoggingGXF_LOG_VERBOSE()GXF_LOG_DEBUG()GXF_LOG_INFO()GXF_LOG_WARNING()GXF_LOG_ERROR()Component FactoryGXF_EXT_FACTORY_BEGIN()GXF_EXT_FACTORY_SET_INFO()GXF_EXT_FACTORY_SET_DISPLAY_INFO()GXF_EXT_FACTORY_END()GXF_EXT_FACTORY_ADD()GXF_EXT_FACTORY_ADD_VERBOSE()GXF_EXT_FACTORY_ADD_LITE()GXF_EXT_FACTORY_ADD_0()GXF_EXT_FACTORY_ADD_0_VERBOSE()GXF_EXT_FACTORY_ADD_0_LITE()Graph eXecution EngineGraph Execution Engine1. How to override the parameters that are specified in the graph file using command line options?Graph Composer ContainersGraph Composer and GXF ContainersPrerequisitesGXF Component InterfacesGXF Component InterfacesCodeletCodelet~Codelet()start()tick()stop()getExecutionTimestamp()getExecutionTime()getDeltaTime()getExecutionCount()isFirstTick()beforeStart()beforeTick()beforeStop()AllocatorMemoryStorageTypekHostkDevicekSystemAllocatorStagekUninitializedkInitializationInProgresskInitializedkDeinitializationInProgressAllocator~Allocator()is_available_abi()allocate_abi()free_abi()block_size_abi()allocate()free()allocator_stage_str()CudaAllocatorCudaAllocator~CudaAllocator()allocate()free()allocate_async_abi()free_async_abi()get_pool_size()ReceiverReceiverreceive_abi()back_size_abi()peek_back_abi()sync_abi()sync_io_abi()wait_abi()receive()back_size()sync()sync_io()wait()peekBack()setTransmitter()TransmitterTransmitterpublish_abi()back_size_abi()sync_abi()sync_io_abi()pop_io_abi()publish()publish()back_size()sync()sync_io()pop_io()pop()SystemSystemschedule_abi()unschedule_abi()runAsync_abi()stop_abi()wait_abi()event_notify_abi()schedule()unschedule()runAsync()stop()wait()event_notify()SchedulerSchedulerprepare_abi()SchedulingTermSchedulingTerm~SchedulingTerm()check_abi()onExecute_abi()update_state_abi()check()onExecute()RouterRouteraddRoutes()removeRoutes()syncInbox()wait()syncOutbox()setClock()addNetworkContext()ClockClocktime()timestamp()sleepFor()sleepUntil()BenchmarkBenchmarkControllerBenchmarkControllerBenchmarkPublisherBenchmarkPublishergetEntityBuffer()getPublishedTimestamps()getAsyncSchedulingterm()setNumOfMessagesToPublish()clearRecordedTimestamps()BenchmarkSinkBenchmarkSinkbegin()end()reset()compute()conclude()getReceivedTimestamps()getPerformanceCalculators()clearRecordedTimestamps()GXF Application API'sGXF App C++ APIsArgArgInfoArgOverrideArgArg ParseparseArgsOfType()applyArg()findArg()ApplicationApplicationSegmentPortPairSegmentPortSegmentPortPairSchedulerTypeSegmentGraph EntityGraphEntityGXF App Python APIsNodeNodeGraphGraphEntityEntityComponentComponentEntityGroupEntityGroupComputeEntityComputeEntityPyComputeEntityPyComputeEntitystandard_methodsconnect()enable_job_statistics()set_scheduler()set_clock()_generate_name()TensorGXF Runtime API'sGXF Core C++ APIsExpectedExpectedComponentComponentEntityEntityHandleUntypedHandle ClassHandle ClassParametersParameterParameter TypesParameter RegistrationGXF Core C APIsContextCreate contextCreate a context from a shared contextGet a shared context from a contextDestroy contextExtensionsGxfLoadExtensionsInfoLoad Extension librariesLoad Extension from a pointerLoad Metadata filesRegister componentRegister a component during runtimeGraph ExecutionLoads a list of entities from YAML fileSet the root folder for searching YAML files during loadingLoads a list of entities from YAML textActivate all system componentsDeactivate all System componentsStarts the execution of the graph asynchronouslyInterrupt the execution of the graphWaits for the graph to complete executionRuns all System components and waits for their completionEntitiesCreate an entityActivate an entityDeactivate an entityDestroy an entityFind an entityFind all entitiesIncrease reference count of an entityDecrease reference count of an entityGet the reference count of an entityGet status of an entityGets the name of the entityGet state of an entityNotify entity of an eventNotify entity of an event including the event typeCheck if an entity is validComponentsGet component type identifierGet component type nameGet component type name from component UIDGet component nameGet unique identifier of the entity of given componentGets the pointer to an entity itemAdd a new componentAdds a new component to an entity and returns the pointer to the componentRemove a componentAdd component to entity interfaceFind a component in an entityFinds a component in an entity and returns pointer to componentFind all components in an entityGet type identifier for a componentGets pointer to componentCheck if a component is derived from another componentParameter64-bit floating point64-bit signed integer64-bit unsigned integer32-bit signed integer32-bit unsigned integer16-bit unsigned integer16-bit signed integer8-bit unsigned integer8-bit signed integerString parameterBooleanHandleVector ParametersSet 1-D Vetor ParametersSet 2-D Vetor ParametersGet 1-D Vetor ParametersGet 2-D Vetor ParametersYAML ParametersSets a parameter from YAMLFile ParametersSets a FilePath parameterEntityGroupkDefaultEntityGroupNameCreate an entity groupUpdate entity’s EntityGroupFind all resources from an EntityGroupFind the EntityGroup gid that the entity belongs toGet name of an EntityGroupGet resource component id from EntityGroupInformation QueriesGet Meta Data about the GXF RuntimeGet description and list of components in loaded ExtensionGet description and list of parameters of ComponentGet parameter type descriptionGet flag type descriptionGet parameter descriptionRedirect logs to a fileMiscellaneousGet string description of errorCheck if a result is successfulSet log severityGet log severityGXF Core Python APIsContextcontext_createcontext_destroyExtensionsload_extensionsget_extension_listget_extension_infoGraphgraph_load_fileset_root_filepath_subgraph_load_filegraph_activategraph_rungraph_run_asyncgraph_interruptgraph_waitgraph_savegraph_deactivategxf_set_severityEntitiesgxf_entity_create_infoentity_createentity_activateentity_deactivateentity_destroyentity_findentity_find_allentity_ref_count_incentity_ref_count_decentity_get_stateentity_event_notifyentity_notify_event_typeentity_get_statusEntityGroupentity_group_createentity_group_addComponentsgxf_tid_tgxf_uid_tget_component_listget_component_infoget_param_listget_param_infocomponent_addcomponent_findcomponent_type_idcomponent_type_namecomponent_add_to_interfacePrimitive Parameters64-bit floating point (double)32-bit floating point64-bit signed integer64-bit unsigned integer32-bit signed integerparameter_set_strparameter_get_strparameter_set_handleparameter_get_handleparameter_set_boolparameter_get_boolparameter_set_pathparameter_set_from_yaml_nodeVector ParametersSet 1-D Vetor ParametersSet 2-D Vetor ParametersGet 1-D Vetor ParametersGet 2-D Vetor ParametersExtension ManualExtensionsCudaExtensionComponentsGXF Stream SyncSignalerWaiterGxfStreamExtensionComponentsGXF Stream Sync WorkflowAt the Waiter CodeletExampleStandardExtensionInterfacesComponentsPython BindingsPython CodeletsGeneral ConceptsImplenting a Python CodeletNetworkExtensionInterfacesComponentsNvTritonExtComponentsSerializationExtensionInterfacesComponentsMultimediaExtensionComponentsVideoEncoderExtensionComponentsVideoDecoderExtensionComponentsBehavior TreesGeneral ConceptBehavior Tree CodeletsUCX ExtensionDescriptionRequirementsComponentsExampleHttpExtensionInterfacesComponentsGrpcExtensionInterfacesComponentsTensorRTExtensionComponentsNvDs3dProcessingExtComponentsNvDsActionRecognitionExtComponentsNvDsAnalyticsExtComponentsNvDsBaseExtInterfacesComponentsNvDsCloudMsgExtComponentsNvDsConverterExtComponentsNvDsDewarperExtComponentsNvDsInferenceExtComponentsNvDsInferenceUtilsExtComponentsNvDsInterfaceExtInterfacesComponentsNvDsMuxDemuxExtComponentsNvDsOpticalFlowExtComponentsNvDsOutputSinkExtComponentsNvDsSampleExtComponentsNvDsSampleModelsExtComponentsNvDsSourceExtComponentsNvDsTemplateExtComponentsNvDsTrackerExtComponentsNvDsTranscodeExtComponentsNvDsTritonExtComponentsNvDsUcxExtComponentsNvDsUdpExtComponentsNvDsVisualizationExtComponentsToolsRegistryRepository ManagerNVIDIA Cloud RepositoryLocal WorkspaceCacheExtension RegistrationInstalling graphs for deploymentRegistry Command Line Interfacecachereporepo cleanrepo listrepo inforepo syncextnextn addextn syncextn importextn listextn infoextn versionsextn variantsextn dependenciescompcomp listcomp infographgraph installComposerUser InterfaceMenu BarContext MenuToolbarComponent ListCreate New ApplicationOpen and Save Application GraphsCompose an Application GraphFinding the right componentCreating a Component InstanceUnderstanding the Component HandlesLinking and Unlinking componentsEntity NodeSetting up a Connection from an Input to an OutputChanging the Component PropertiesEditor FeaturesSubgraphBackdropExtend a GraphRun GraphOptionsBuild Container ImageOptionsGenerate Gstreamer ExtensionOptionsRemote AccessComparison of available optionsOmniverse Streaming ClientInstallation and UsageConfigurationServerClientWebRTC streamingCurrent Limitations:RestrictionsTrouble ShootingContainer BuilderPrerequisitesContainer Builder FeaturesContainer Builder Tool UsageMultiarch BuildRun Container BuilderContainer Builder ConfigurationA Basic Example of Container Builder ConfigurationA Multi-Stage ExampleContainer builder main control section specificationContainer dockerfile stage section specificationGXF Command Line InterfacestatconfigdumpPipetuner GuideIntroductionPrerequisitesSystem RequirementsNGC SetupSample Data SetupDeepStream Tuning CaseMTMC Tuning CaseQuick StartLaunch Tuning ProcessDS Perception TuningMTMC Tuning with Frozen PerceptionMTMC E2E TuningOutputStop PipeTunerRetrieve and Visualize Tuning ResultsCustom TuningUnderstanding PipeTuner Config PathCustom DatasetCreate Video FilesCreate Ground Truth LabelsLaunch PipeTuner with the New Config FileData AugmentationVideo GenerationUse in DS Perception TuningCustom ModelsCustom AlgorithmsCustomize ParametersChangelogVersion 1.0FAQ GuideFAQGeneralRegistryContainer BuilderComposerExtension DevelopementGXF serverDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formRequest Documentation FixnextWelcome to the DeepStream DocumentationOn this pageNVIDIA DeepStream SDK Developer GuidePlugins Development GuideTroubleshooting and FAQ GuideDeepstream Setup On WSL2DeepStream API Reference DocumentationNvidia Deepstream Service MakerDeepstream LibrariesApplication Development Using Graph ComposerPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.