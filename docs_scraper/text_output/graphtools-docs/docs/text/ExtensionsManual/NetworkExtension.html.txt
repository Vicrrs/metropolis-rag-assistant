NetworkExtension — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsNetworkExtensionNetworkExtension#Extension for communications external to a computation graph.UUID:f50665e5-ade2-f71b-de2a-2380614b1725Version:1.6.0Author:NVIDIALicense:LICENSEInterfaces#nvidia::gxf::TcpCodelet#Interface for a codelet for either end of a TCP connection.Component ID:620c572c-f03d-11ed-8a22-8f9adbb0e784Base Type:nvidia::gxf::CodeletComponents#nvidia::gxf::ClockSyncPrimary#Publishes application clock timestamp for use by other apps.Component ID:a61832d1-b0f9-42b3-97b2-ccec0e864e61Base Type:nvidia::gxf::CodeletParameters#tx_timestampThe outgoing timestamp channel.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::TransmitterclockHandle to application’s clock component.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::Clocknvidia::gxf::ClockSyncSecondary#Advances application SyntheticClock to received timestamp.Component ID:e84945fa-8630-4516-f7ce-7df2b05947c7Base Type:nvidia::gxf::CodeletParameters#rx_timestampThe incoming timestamp channel.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::ReceiverclockHandle to application’s synthetic clock component.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::SyntheticClocknvidia::gxf::TcpClient#Codelet that functions as a client in a TCP connection.Component ID:9d5955c7-8fda-22c7-f18f-ea5e2d195be9Base Type:nvidia::gxf::CodeletParameters#receiversList of receivers to receive entities from”.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::ReceivertransmittersList of transmitters to publish entities to.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::Transmitterentity_serializerSerializer for serializing entities.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::EntitySerializeraddressAddress for TCP connection.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_STRINGportPort for TCP connection.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_INT32timeout_msTime in milliseconds to wait before retrying connection. Deprecated - use timeout_period instead.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_UINT64timeout_periodTime to wait before retrying connection. The period is specified as a string containing a number and an (optional) unit.
If no unit is given the value is assumed to be in nanoseconds.
Supported units are: Hz, s, ms. Example: 10ms, 10000000, 0.2s, 50Hz.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_STRINGDefault:100msmaximum_attemptsMaximum number of attempts for I/O operations before failing.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_UINT64Default:10async_scheduling_termSchedules execution when TCP socket or receivers have a message.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::AsynchronousSchedulingTermmax_msg_delay_msTime in milliseconds to wait between messages before ending connection. Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_INT64max_duration_msThe maximum duration for which the component will run (in ms).
If not specified the component will run indefinitely, unless another termination condition is specified.
Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_INT64max_connection_attemptsThe maximum number of times the component will attempt to reconnect.
If not specified the component will attempt reconnection indefinitely,
unless another termination condition is specified. Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_UINT64nvidia::gxf::TcpServer#Codelet that functions as a server in a TCP connection.Component ID:a3e0e42d-e32e-73ab-ef83-fbb311310759Base Type:nvidia::gxf::CodeletParameters#receiversList of receivers to receive entities from”.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::ReceivertransmittersList of transmitters to publish entities to.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::Transmitterentity_serializerSerializer for serializing entities.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::EntitySerializeraddressAddress for TCP connection.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_STRINGportPort for TCP connection.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_INT32timeout_msTime in milliseconds to wait before retrying connection. Deprecated - use timeout_period instead.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_UINT64timeout_periodTime to wait before retrying connection. The period is specified as a string containing a number and an (optional) unit.
If no unit is given the value is assumed to be in nanoseconds.
Supported units are: Hz, s, ms. Example: 10ms, 10000000, 0.2s, 50Hz.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_STRINGDefault:100msmaximum_attemptsMaximum number of attempts for I/O operations before failing.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_UINT64Default:10async_scheduling_termSchedules execution when TCP socket or receivers have a message.Flags:GXF_PARAMETER_FLAGS_NONEType:GXF_PARAMETER_TYPE_HANDLEHandle Type:nvidia::gxf::AsynchronousSchedulingTermmax_msg_delay_msTime in milliseconds to wait between messages before ending connection. Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_INT64max_duration_msThe maximum duration for which the component will run (in ms).
If not specified the component will run indefinitely, unless another termination condition is specified.
Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_INT64max_connection_attemptsThe maximum number of times the component will attempt to reconnect.
If not specified the component will attempt reconnection indefinitely,
unless another termination condition is specified. Helpful for debugging.Flags:GXF_PARAMETER_FLAGS_OPTIONALType:GXF_PARAMETER_TYPE_UINT64previousPython CodeletsnextNvTritonExtOn this pageInterfacesnvidia::gxf::TcpCodeletComponentsnvidia::gxf::ClockSyncPrimaryParametersnvidia::gxf::ClockSyncSecondaryParametersnvidia::gxf::TcpClientParametersnvidia::gxf::TcpServerParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.