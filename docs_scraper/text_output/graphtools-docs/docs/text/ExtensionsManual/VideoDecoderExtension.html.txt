VideoDecoderExtension — DeepStream documentationSkip to main contentBack to topCtrl+KDeepStream documentationDeepStream documentationTable of ContentsDeepStream Getting StartedWelcome to the DeepStream DocumentationMigration GuideInstallationQuickstart GuideDocker ContainersDeepStream SamplesC/C++ Sample Apps Source DetailsPython Sample Apps and Bindings Source DetailsDeepStream Reference Application - deepstream-appDeepStream Reference Application - deepstream-test5 appDeepStream Reference Application - deepstream-nmos appDeepStream Reference Application on GitHubSample Configurations and StreamsImplementing a Custom GStreamer Plugin with OpenCV Integration ExampleTAO toolkit Integration with DeepStreamTAO Toolkit Integration with DeepStreamTutorials and How-to'sDeepStream-3D Custom Apps and Libs TutorialsDeepStream PerformancePerformanceDeepStream AccuracyAccuracy Tuning ToolsDeepStream Custom ModelUsing a Custom Model with DeepStreamDeepStream Key FeaturesDeepStream-3D Sensor Fusion Multi-Modal Application and FrameworkDeepStream-3D Multi-Modal BEVFusion SetupDeepStream-3D Multi-Modal V2XFusion SetupSmart Video RecordIoTOn the Fly Model UpdateNTP Timestamp in DeepStreamAV Sync in DeepStreamDeepStream With REST API SeverDeepStream 3D Action Recognition AppDeepStream 3D Depth Camera AppDeepStream 3D Lidar Inference AppNetworked Media Open Specifications (NMOS) in DeepStreamGst-nvdspostprocess in DeepStreamDeepStream Can Orientation AppDeepStream Application MigrationApplication Migration to DeepStream 7.1 from DeepStream 7.0DeepStream Plugin GuideGStreamer Plugin OverviewMetaData in the DeepStream SDKGst-nvdspreprocess (Alpha)Gst-nvinferGst-nvinferserverGst-nvtrackerGst-nvstreammuxGst-nvstreammux NewGst-nvstreamdemuxGst-nvmultistreamtilerGst-nvdsosdGst-nvdsmetautilsGst-nvdsvideotemplateGst-nvdsaudiotemplateGst-nvvideoconvertGst-nvdewarperGst-nvofGst-nvofvisualGst-nvsegvisualGst-nvvideo4linux2Gst-nvjpegdecGst-nvimagedecGst-nvjpegencGst-nvimageencGst-nvmsgconvGst-nvmsgbrokerGst-nvdsanalyticsGst-nvdsudpsrcGst-nvdsudpsinkGst-nvdspostprocess (Alpha)Gst-nvds3dfilterGst-nvds3dbridgeGst-nvds3dmixerGst-NvDsUcxGst-nvdsxferGst-nvvideotestsrcGst-nvmultiurisrcbinGst-nvurisrcbinDeepStream Troubleshooting and FAQTroubleshootingFrequently Asked QuestionsDeepStream On WSL2DeepStream On WSLFAQ for Deepstream On WSLDeepStream API GuideDeepStream API GuidesDeepStream Service MakerWhat is Deepstream Service MakerService Maker for C/C++ DevelopersService Maker for Python Developers(alpha)Quick Start GuideIntroduction to Flow APIsIntroduction to Pipeline APIsAdvanced FeaturesMigrating Traditional Deepstream Apps to Service Maker Apps in PythonWhat is a Deepstream Service Maker PluginDeepstream LibrariesDeepStream Libraries (Developer Preview)Graph ComposerOverviewPlatformsSupported platformsGetting StartedApplication Development WorkflowCreating an AI ApplicationReference graphsExtension Development WorkflowDeveloping Extensions for DeepStreamDeepStream ComponentsGXF InternalsGXF InternalsGraph eXecution EngineGraph Execution EngineGraph Composer ContainersGraph Composer and GXF ContainersGXF Component InterfacesGXF Component InterfacesGXF Application API'sGXF App C++ APIsGXF App Python APIsGXF Runtime API'sGXF Core C++ APIsGXF Core C APIsGXF Core Python APIsExtension ManualExtensionsCudaExtensionGXF Stream SyncStandardExtensionPython CodeletsNetworkExtensionNvTritonExtSerializationExtensionMultimediaExtensionVideoEncoderExtensionVideoDecoderExtensionBehavior TreesUCX ExtensionHttpExtensionGrpcExtensionTensorRTExtensionNvDs3dProcessingExtNvDsActionRecognitionExtNvDsAnalyticsExtNvDsBaseExtNvDsCloudMsgExtNvDsConverterExtNvDsDewarperExtNvDsInferenceExtNvDsInferenceUtilsExtNvDsInterfaceExtNvDsMuxDemuxExtNvDsOpticalFlowExtNvDsOutputSinkExtNvDsSampleExtNvDsSampleModelsExtNvDsSourceExtNvDsTemplateExtNvDsTrackerExtNvDsTranscodeExtNvDsTritonExtNvDsUcxExtNvDsUdpExtNvDsVisualizationExtToolsRegistryRegistry Command Line InterfaceComposerContainer BuilderGXF Command Line InterfacePipetuner GuideFAQ GuideFAQDeepStream Legal InformationDeepStream End User License AgreementDeepStream FeedbackFeedback formExtensionsVideoDecoder...VideoDecoderExtension#NVIDIA GXF component for H.264 video decode.
The video Decoder GXF extension is based on V4L2 APIs.
It uses the hardware video Decode engine on the platform by interfacing with V4L2 APIs.
It gives out decoded yuv frame.
This extension is supported on Tegra and dGPU platforms.For x86+dGPU, the extension has a dependency on DeepStream. Please install nvidia DeepStream SDK (version 7.1) before running pipelines for x86+dGPU.UUID: edc99001-73bd-435c-af0c-e013dcda3439Version: 1.3.0Author: NVIDIALicense: ProprietaryComponents#This extension is implemented using three components:VideoDecoderRequest,VideoDecoderResponseandVideoDecoderContextnvidia::gxf::VideoDecoderRequest#This codelet starts H.264 video decoding process by queueing the input buffer.Component ID: 39c030763a42-4927-9960-0072b4e1bc69Base Type: nvidia::gxf::CodeletParameters#input_frameReceiver to get the input data(receive compressed data)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::gxf::Receiverinbuf_storage_typeInput buffer storage typeValid values:0: Host memory1: Device memoryFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_UINT32Default: 1videodecoder_contextHandle to video decoder context componentFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: gxf::Handle<VideoDecoderContext>scheduling_termHandle to async scheduling term to get/set event state for VideoDecoderResponse codelet.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: gxf::Handle<gxf::AsynchronousSchedulingTerm>codecVideo codec to be used, only H.264 supported.Valid values:0: H.264 codecFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_UINT32Default: 0disableDPBEnable low latency decode, works only for IPPP caseFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_UINT32Default: 0output_formatOutput frame video formatFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_STRINGValid values:nv12:  NV12(YUV420, 2 planes: Y, UV interleaved) pitch linear formatyuv420planar: YUV420 planar(3 planes:Y,U,V) pitch linear formatnvidia::gxf::VideoDecoderResponse#This codelet completes the video decoding process by publishing decoded YUV buffer.Component ID: 6cc164db5db4-431e-8b63a45ea1e7-b8a6Base Type: nvidia::gxf::CodeletParameters#output_transmitterTransmitter to publish the output yuv data(video buffer)Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::gxf::TransmitterpoolMemory pool for allocating output data.Flags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: nvidia::gxf::Allocatoroutbuf_storage_typeOutput buffer storage typeValid values:0: Host memory1: Device memoryFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_INT32Default: 1videodecoder_contextHandle to video decoder context componentFlags: GXF_PARAMETER_FLAGS_NONEType: GXF_PARAMETER_TYPE_HANDLEHandle Type: gxf::Handle<VideoDecoderContext>nvidia::gxf::VideoDecoderContext#Component that implements the Video Decoder contextComponent ID: c69e604d9f1d-425e-ad5f121a7e9d-3456Base Type: nvidia::gxf::ComponentParameters#NonepreviousVideoEncoderExtensionnextBehavior TreesOn this pageComponentsnvidia::gxf::VideoDecoderRequestParametersnvidia::gxf::VideoDecoderResponseParametersnvidia::gxf::VideoDecoderContextParametersPrivacy Policy|Manage My Privacy|Do Not Sell or Share My Data|Terms of Service|Accessibility|Corporate Policies|Product Security|ContactCopyright © 2024-2025, NVIDIA Corporation.Last updated on Jan 13, 2025.